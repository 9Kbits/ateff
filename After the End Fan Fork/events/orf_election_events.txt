namespace = orfelection

character_event = {
	id = orfelection.1
	title = EVTDESC_bounce
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_playable = yes
		government = open_range_feudalism_government
		is_independent = no
	}
	
	immediate = {
		
		#find member of own party set to if found set to oponent_candidate_1 and set oponent_1_found
		liege = {
			any_voter = {
				if = {
					limit = { 
						OR = {
							AND = {
								trait = party_populist
								root = { trait = party_populist }
							}
							AND = {
								trait = party_magnate
								root = { trait = party_magnate }
							}
							AND = {
								trait = party_royalist
								root = { trait = party_royalist }
							}
							AND = {
								trait = party_theocratic
								root = { trait = party_theocratic }
							}
							AND = {
								trait = party_opposition
								root = { trait = party_opposition }
							}
						}
						NOT = { has_character_flag orf_in_election }
						OR = {
							#has never been elected, this means they were appointed and can be run against immediately (maybe add cooldown of 2 years)
							NOT = { has_character_flag = orf_won_election }
							#it's been 4 years. upon victory the flag should be removed and then re-added
							had_character_flag = {
								flag = orf_won_election
								years >= 4
							}
						}
					}
					root = { set_character_flag = orf_oponent_1_found }
					save_event_target_as = orf_oponent_candidate_1
					
				}
			}
		}
		#find appointed council member to run against, if found set to oponent_candidate_1 and set oponent_1_found this is intended to overwrite the first candidate.
		liege = {
			any_voter = {
				if = {
					limit = { 
						NOT = { has_character_flag orf_in_election }
							#has never been elected, this means they were appointed and can be run against immediately (maybe add cooldown of 2 years)
							NOT = { has_character_flag = orf_won_election
						}
					}
					root = { set_character_flag = orf_oponent_1_found }
					save_event_target_as = orf_oponent_candidate_1
				}
			}
		}
		
		#find a ruler of a different party to run against, if found set to oponent_candidate_2 and set oponent_2_found
		liege = {
			any_voter = {
				if = {
					limit = { 
						NOT = {
							OR = {
								AND = {
									trait = party_populist
									root = { trait = party_populist }
								}
								AND = {
									trait = party_magnate
									root = { trait = party_magnate }
								}
								AND = {
									trait = party_royalist
									root = { trait = party_royalist }
								}
								AND = {
									trait = party_theocratic
									root = { trait = party_theocratic }
								}
								AND = {
									trait = party_opposition
									root = { trait = party_opposition }
								}
							}
						}
						NOT = { has_character_flag orf_in_election }
							#has never been elected, this means they were appointed and can be run against immediately (maybe add cooldown of 2 years)
							NOT = { has_character_flag = orf_won_election
						}
					}
					root = { set_character_flag = orf_oponent_1_found }
					save_event_target_as = orf_oponent_candidate_1
				}
			}
		}
	
	option = { 
		character_event = { id = orfelection.2 }
	}
}

character_event = {
	id = orfelection.2
	title = EVTTITLE_orf_election_candidates_found
	
	picture = GFX_evt_battle
	border = GFX_event_narrative_frame_war
	
	is_triggered_only = yes
	
	trigger = {
		is_playable = yes
		government = open_range_feudalism_government
	}
	
	desc = {
		text = EVTDESC_orf_candidates_to_run_against
	}
	
	immediate = {
		set_global_flag = election_started
		
	
	}
	
	option = { 
		name = EVTOPTA_oponent_1
	}
	
	option = {
		name = EVTOPTA_oponent_2
	}
	
	option = {
		name = EVTOPTA_nevermind
	}
}