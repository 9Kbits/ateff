namespace = orfelection

character_event = {
	id = orfelection.1
	title = EVTTITLE_candidate_finder
	
	desc = EVTDESC_candidate_finder
	
	is_triggered_only = yes
	
	trigger = {
		is_playable = yes
		government = open_range_feudalism_government
		is_independent = no
	}
	
	immediate = {
		
		#find member of own party set to if found set to opponent_candidate_1 and set opponent_1_found
		liege = {
			any_voter = {
				if = {
					limit = { 
						OR = {
							AND = {
								trait = party_populist
								root = { trait = party_populist }
							}
							AND = {
								trait = party_magnate
								root = { trait = party_magnate }
							}
							AND = {
								trait = party_royalist
								root = { trait = party_royalist }
							}
							AND = {
								trait = party_theocratic
								root = { trait = party_theocratic }
							}
							AND = {
								trait = party_opposition
								root = { trait = party_opposition }
							}
						}
						NOT = { has_character_modifier = orf_election_cooldown }
						NOT = {
							OR = {
								has_job_title = job_chancellor
								has_job_title = job_marshal
								has_job_title = job_treasurer
								has_job_title = job_spymaster
								has_job_title = job_spiritual
							}
						}
					}
					root = { set_character_flag = orf_opponent_1_found }
					save_event_target_as = orf_opponent_candidate_1
					
				}
				else = { 
					set_character_flag = opponent_1_party_not_found
				}
			}
		}
		#find appointed council member to run against, if found set to opponent_candidate_1 and set opponent_1_found this is intended to overwrite the first candidate.
		liege = {
			any_voter = {
				if = {
					limit = { 
							has_character_flag = unelected_senator
							#has never been elected, this means they were appointed and can be run against immediately (maybe add cooldown of 2 years)
							NOT = { has_character_flag = orf_won_election
						}
					}
					root = { set_character_flag = orf_opponent_1_found }
					save_event_target_as = orf_opponent_candidate_1
				}
				else = { 
					set_character_flag = opponent_1_appointee_not_found
				}
			}
		}
		
		#find a ruler of a different party to run against, if found set to opponent_candidate_2 and set opponent_2_found
		liege = {
			any_voter = {
				if = {
					limit = { 
						NOT = {
							OR = {
								AND = {
									trait = party_populist
									root = { trait = party_populist }
								}
								AND = {
									trait = party_magnate
									root = { trait = party_magnate }
								}
								AND = {
									trait = party_royalist
									root = { trait = party_royalist }
								}
								AND = {
									trait = party_theocratic
									root = { trait = party_theocratic }
								}
								AND = {
									trait = party_opposition
									root = { trait = party_opposition }
								}
							}
						}
						NOT = { has_character_modifier = orf_election_cooldown }
						NOT = {
							OR = {
								has_job_title = job_chancellor
								has_job_title = job_marshal
								has_job_title = job_treasurer
								has_job_title = job_spymaster
								has_job_title = job_spiritual
							}
						}
					}
					root = { set_character_flag = orf_opponent_1_found }
					save_event_target_as = orf_opponent_candidate_2
				}
				else = { 
					set_character_flag = opponent_2_not_found
				}
			}
		}
	}
	option = { 
		name = EVTOPTA_orfelection_opponent_appointee
		trigger = {
			AND = {
				NOT = { has_character_flag = opponent_1_appointee_not_found }
				NOT = { has_character_flag = opponent_1_party_not_found }
			}
		}
	}
	option = { 
		name = EVTOPTA_orfelection_opponent_party
		trigger = {
			AND = {
				has_character_flag = opponent_1_appointee_not_found
				NOT = { has_character_flag = opponent_1_party_not_found }
			}
		}
	}
	
	option = {
		name = EVTOPTA_orfelection_opponent_opponent
		trigger = {
			NOT = { has_character_flag = opponent_2_not_found }
		}
	}
	
	option = {
		name = EVTOPTA_orfelection_nevermind
	}
}
