namespace = orfelection

character_event = {
	id = orfelection.1
	
	desc = EVTDESC_orf_candidates_to_run_against
	
	is_triggered_only = yes
	
	trigger = {
		 
		government = open_range_feudalism_government
		is_independent = no
	}
	
	immediate = {
		
		#find member of own party set to if found set to opponent_candidate_1 and set opponent_1_found
		if = {
			limit = { trait = party_populist }
			liege = { 
				random_voter = {
					limit = { 
						trait = party_populist
						NOT = { has_character_modifier = orf_election_cooldown }
						NOT = {has_character_flag = orf_election_running}
						NOT = {
							OR = {
								has_job_title = job_chancellor
								has_job_title = job_marshal
								has_job_title = job_treasurer
								has_job_title = job_spymaster
								has_job_title = job_spiritual
							}
						}
					}
					save_event_target_as = orf_opponent_candidate_party
					root = { set_character_flag = orf_opponent_1_party_found }
					set_character_flag = temp_block_orf
				}
			}
		}
		if = {
			limit = { trait = party_magnate }
			liege = { 
				random_voter = {
					limit = { 
						trait = party_magnate
						NOT = {has_character_flag = orf_election_running}
						NOT = { has_character_modifier = orf_election_cooldown }
						NOT = {
							OR = {
								has_job_title = job_chancellor
								has_job_title = job_marshal
								has_job_title = job_treasurer
								has_job_title = job_spymaster
								has_job_title = job_spiritual
							}
						}
					}
					save_event_target_as = orf_opponent_candidate_party
					root = { set_character_flag = orf_opponent_1_party_found }
					set_character_flag = temp_block_orf
				}
			}
		}
		if = {
			limit = { trait = party_royalist }
			liege = { 
				random_voter = {
					limit = { 
						trait = party_royalist
						NOT = {has_character_flag = orf_election_running}
						NOT = { has_character_modifier = orf_election_cooldown }
						NOT = {
							OR = {
								has_job_title = job_chancellor
								has_job_title = job_marshal
								has_job_title = job_treasurer
								has_job_title = job_spymaster
								has_job_title = job_spiritual
							}
						}
					}
					save_event_target_as = orf_opponent_candidate_party
					root = { set_character_flag = orf_opponent_1_party_found }
					set_character_flag = temp_block_orf
				}
			}
		}
		if = {
			limit = { trait = party_theocratic }
			liege = { 
				random_voter = {
					limit = { 
						trait = party_theocratic
						NOT = {has_character_flag = orf_election_running}
						NOT = { has_character_modifier = orf_election_cooldown }
						NOT = {
							OR = {
								has_job_title = job_chancellor
								has_job_title = job_marshal
								has_job_title = job_treasurer
								has_job_title = job_spymaster
								has_job_title = job_spiritual
							}
						}
					}
					save_event_target_as = orf_opponent_candidate_party
					root = { set_character_flag = orf_opponent_1_party_found }
					set_character_flag = temp_block_orf
				}
			}
		}
		if = {
			limit = { trait = party_opposition }
			liege = { 
				random_voter = {
					limit = { 
						trait = party_opposition
						NOT = {has_character_flag = orf_election_running}
						NOT = { has_character_modifier = orf_election_cooldown }
						NOT = {
							OR = {
								has_job_title = job_chancellor
								has_job_title = job_marshal
								has_job_title = job_treasurer
								has_job_title = job_spymaster
								has_job_title = job_spiritual
							}
						}
					}
					save_event_target_as = orf_opponent_candidate_party
					root = { set_character_flag = orf_opponent_1_party_found }
					set_character_flag = temp_block_orf
				}
			}
		}
		#find appointed council member to run against, if found set to opponent_candidate_1 and set opponent_1_found this is intended to overwrite the first candidate.
		liege = {
			random_voter = {
				limit = { 
					has_character_flag = unelected_senator
					#has never been elected, this means they were appointed and can be run against immediately (maybe add cooldown of 2 years)
					NOT = { 
						has_character_flag = orf_won_election
					}
					NOT = { 
						has_character_flag = temp_block_orf
					}
					NOT = {has_character_flag = orf_election_running}
				}
				root = { set_character_flag = orf_opponent_1_appointee_found }
				save_event_target_as = orf_opponent_candidate_appointee
				set_character_flag = temp_block_orf
			}
		}
		
		#find a ruler of a different party to run against, if found set to opponent_candidate_2 and set opponent_2_found
		liege = {
			random_voter = {
				limit = { 
					NOT = {
						OR = {
							AND = {
								trait = party_populist
								root = { trait = party_populist }
							}
							AND = {
								trait = party_magnate
								root = { trait = party_magnate }
							}
							AND = {
								trait = party_royalist
								root = { trait = party_royalist }
							}
							AND = {
								trait = party_theocratic
								root = { trait = party_theocratic }
							}
							AND = {
								trait = party_opposition
								root = { trait = party_opposition }
							}
						}
					}
					NOT = { 
						has_character_flag = temp_block_orf
					}
					NOT = {has_character_flag = orf_election_running}
					NOT = { has_character_modifier = orf_election_cooldown }
					NOT = {
						OR = {
							has_job_title = job_chancellor
							has_job_title = job_marshal
							has_job_title = job_treasurer
							has_job_title = job_spymaster
							has_job_title = job_spiritual
						}
					}
				}
				root = { set_character_flag = orf_opponent_2_found }
				save_event_target_as = orf_opponent_candidate_outsider		
				set_character_flag = temp_block_orf	
			}
		}
		#remove repeat blockers
		event_target:orf_opponent_candidate_party = { clr_character_flag = temp_block_orf }
		event_target:orf_opponent_candidate_appointee = { clr_character_flag = temp_block_orf }
		event_target:orf_opponent_candidate_outsider = { clr_character_flag = temp_block_orf }
	}	
	option = { 
		name = EVTOPTA_orfelection_opponent_appointee
		trigger = {
			has_character_flag = orf_opponent_1_appointee_found
		}
		show_portrait = event_target:orf_opponent_candidate_appointee
		#set this particular target as THE target and send letter
		ROOT = { save_event_target_as = orf_election_opponent_attacker }
		
		#remove repeat blockers
	}
	option = { 
		name = EVTOPTA_orfelection_opponent_party
		#remove repeat blockers
		trigger = {
			has_character_flag = orf_opponent_1_party_found
		}
		show_portrait = event_target:orf_opponent_candidate_party
		#set this particular target as THE target and send letter
		event_target:orf_opponent_candidate_party = { save_event_target_as = orf_election_opponent_defender }
		ROOT = { save_event_target_as = orf_election_opponent_attacker }
	}
	
	option = {
		name = EVTOPTA_orfelection_opponent_opponent
		trigger = {
			has_character_flag = orf_opponent_2_found
		}
		show_portrait = event_target:orf_opponent_candidate_outsider
		#set this particular target as THE target and send letter
		event_target:orf_opponent_candidate_outsider = { save_event_target_as = orf_election_opponent_defender }
		ROOT = { save_event_target_as = orf_election_opponent_attacker }
		#remove repeat blockers
	}
	after = {
		event_target:orf_election_opponent_defender = {
			character_event = { id = orfelection.3 }
			set_character_flag = orf_election_running
		}
		event_target:orf_election_opponent_attacker ={ #this is just ROOT
			set_character_flag = orf_election_running
		}
		
	}

	option = {
		name = EVTOPTA_orfelection_nevermind
	}
}

character_event = {
	id = orfelection.3
	title = EVTTITLE_orf_election_inform
	
	picture = GFX_evt_battle
	
	is_triggered_only = yes
	
	trigger = {
		government = open_range_feudalism_government
	}
	
	desc = {
		text = EVTDESC_orf_election_inform
	}
	option = { 
		name = EVTOPTA_orf_election_inform_run_against
		event_target:orf_election_opponent_attacker = { character_event = { id = orfelection.4  days = 10 } }
		event_target:orf_election_opponent_defender = { character_event = { id = orfelection.4  days = 10 } }
		event_target:orf_election_opponent_attacker = { character_event = { id = orfelection.8  days = 125 } }
		event_target:orf_election_opponent_defender = { character_event = { id = orfelection.8  days = 130 } }
	}
	option = { 
		name = EVTOPTA_orf_election_inform_resign
		event_target:orf_election_opponent_attacker = { character_event = { id = orfelection.5  days = 10 } }
	}
}

character_event = {
	id = orfelection.4
	title = EVTTITLE_orf_election_campaign
	
	picture = GFX_evt_battle
	
	is_triggered_only = yes
	
	trigger = {
		government = open_range_feudalism_government
	}
	
	desc = {
		text = EVTDESC_orf_election_inform
	}
	option = { 
		name = EVTOPTA_orf_election_campaign_range
		character_event = {id = orfelection.15 days = 25}	
	}
	
	option = {
		name = EVTOPTA_orf_election_campaign_towns
		character_event = {id = orfelection.13 days = 25}	
	}
	
	option = {
		name = EVTOPTA__orf_election_campaign_hold_meeting
		character_event = {id = orfelection.11 days = 25}
	}
	
	option = {
		name = EVTOPTA__orf_election_campaign_done_campaigning
	}
}

character_event = {
	id = orfelection.5
	title = EVTTITLE_orf_election_resigned
	
	picture = GFX_evt_battle
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	desc = {
		text = EVTDESC_orf_election_resigned
	}
	option = { 
		name = EVTOPTA_orf_election_resigned_that_was_easy
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_12 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_12 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_12 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_11 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_11 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_11 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_10 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_10 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_10 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_9 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_9 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_9 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_8 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_8 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_8 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_7 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_7 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_7 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_6 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_6 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_6 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_5 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_5 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_5 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_4 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_4 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_4 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_4 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_4 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_4 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_3 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_3 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_3 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_2 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_2 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_2 }
		}		
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_1 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_1 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_1 }
		}		
	}
}



#when a new orf election event should affect elections just apply it here
#for organization sake try to keep modifiers in the list sourced from the person the list is about
#aka, penalties hurt the person that has the penalty rather than buff the other person, let's bad results for one and good results for the other
#predictably roll results, plus it's easy


character_event = {
	id = orfelection.8
	title = EVTTITLE_orf_election_waiting_results
	
	picture = GFX_evt_battle
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	desc = {
		text = EVTDESC_orf_election_waiting_results
	}
	
	immediate = {
	}
	
	option = { 
		name = EVTOPTA_orf_election_waiting_results
		random_list = {
			50 = {
				mult_modifier = {
					factor = 1.3
					event_target:orf_election_opponent_attacker = { has_character_flag = orfelec_good }
				}
				mult_modifier = {
					factor = 1.1
					event_target:orf_election_opponent_attacker = { has_character_flag = orfelec_neutral }
				}
				mult_modifier = {
					factor = 0.75
					event_target:orf_election_opponent_attacker = { has_character_flag = orfelec_bad }
				}
							
				event_target:orf_election_opponent_attacker = { set_character_flag = election_won }
				event_target:orf_election_opponent_attacker = { narrative_event = { id =  orfelection.10 days = 10} }
			}
			
			
			
			50 = {
				mult_modifier = {
					factor = 1.3
					event_target:orf_election_opponent_defender = { has_character_flag = orfelec_good }
				}
				mult_modifier = {
					factor = 1.1
					event_target:orf_election_opponent_defender = { has_character_flag = orfelec_neutral }
				}
				mult_modifier = {
					factor = 0.75
					event_target:orf_election_opponent_defender = { has_character_flag = orfelec_bad }
				}
								
				event_target:orf_election_opponent_defender = { set_character_flag = election_won }
				event_target:orf_election_opponent_defender = { narrative_event = { id =  orfelection.10 days = 10} }
			}			
		}
	}
}



narrative_event = {
	id = orfelection.10
	title = EVTTITLE_orf_election_attacker_won
	
	picture = GFX_evt_battle
	
	is_triggered_only = yes
	
	trigger = {
		same_realm = FROM
		adult = yes
	}
	
	desc = {
		text = EVTDESC_orf_election_attacker_won
		trigger = { event_target:orf_election_opponent_attacker = { has_character_flag = election_won } }
	}
	
	desc = {
		text = EVTDESC_orf_election_defender_won
		trigger = { event_target:orf_election_opponent_defender = { has_character_flag = election_won } }
	}
	
	immediate = {
		event_target:orf_election_opponent_attacker = { set_character_flag = election_attacker } 
		event_target:orf_election_opponent_defender = { set_character_flag = election_defender } 
	}
	
	
	option = { 
		name = EVTOPTA_orf_election_attacker_won
		trigger = { 
			event_target:orf_election_opponent_attacker = { has_character_flag = election_won } 
			has_character_flag = election_attacker
		}
		event_target:orf_election_opponent_attacker = { clr_character_flag = election_won } 
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_12 } }
			event_target:orf_election_opponent_defender = { remove_title = title_senator_12 }
			event_target:orf_election_opponent_attacker = { give_title = title_senator_12 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_11 } }
			event_target:orf_election_opponent_defender = { remove_title = title_senator_11 }
			event_target:orf_election_opponent_attacker = { give_title = title_senator_11 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_10 } }
			event_target:orf_election_opponent_defender = { remove_title = title_senator_10 }
			event_target:orf_election_opponent_attacker = { give_title = title_senator_10 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_9 } }
			event_target:orf_election_opponent_defender = { remove_title = title_senator_9 }
			event_target:orf_election_opponent_attacker = { give_title = title_senator_9 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_8 } }
			event_target:orf_election_opponent_defender = { remove_title = title_senator_8 }
			event_target:orf_election_opponent_attacker = { give_title = title_senator_8 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_7 } }
			event_target:orf_election_opponent_defender = { remove_title = title_senator_7 }
			event_target:orf_election_opponent_attacker = { give_title = title_senator_7 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_6 } }
			event_target:orf_election_opponent_defender = { remove_title = title_senator_6 }
			event_target:orf_election_opponent_attacker = { give_title = title_senator_6 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_5 } }
			event_target:orf_election_opponent_defender = { remove_title = title_senator_5 }
			event_target:orf_election_opponent_attacker = { give_title = title_senator_5 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_4 } }
			event_target:orf_election_opponent_defender = { remove_title = title_senator_4 }
			event_target:orf_election_opponent_attacker = { give_title = title_senator_4 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_4 } }
			event_target:orf_election_opponent_defender = { remove_title = title_senator_4 }
			event_target:orf_election_opponent_attacker = { give_title = title_senator_4 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_3 } }
			event_target:orf_election_opponent_defender = { remove_title = title_senator_3 }
			event_target:orf_election_opponent_attacker = { give_title = title_senator_3 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_2 } }
			event_target:orf_election_opponent_defender = { remove_title = title_senator_2 }
			event_target:orf_election_opponent_attacker = { give_title = title_senator_2 }
		}		
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_1 } }
			event_target:orf_election_opponent_defender = { remove_title = title_senator_1 }
			event_target:orf_election_opponent_attacker = { give_title = title_senator_1 }
		}
		add_character_modifier = {
			name = orf_election_cooldown
			duration = 1310
		}
		clr_character_flag = election_won
		clr_character_flag = election_defender
	}

	option = { 
		name = EVTOPTA_orf_election_defender_won
		trigger = { 
			event_target:orf_election_opponent_defender = { has_character_flag = election_won } 
			has_character_flag = election_defender
		}
		
		add_character_modifier = {
			name = orf_election_cooldown
			duration = 1310
		}		
		
		clr_character_flag = election_won
		clr_character_flag = election_defender
		
	}

	option = { 
		name = EVTOPTA_orf_election_attacker_lost
		trigger = { 
			event_target:orf_election_opponent_defender = { has_character_flag = election_won } 
			has_character_flag = election_attacker
		}
		add_character_modifier = {
			name = orf_election_lost_cooldown
			duration = 365
		}		
		
		clr_character_flag = election_defender
		
	}

	option = { 
		name = EVTOPTA_orf_election_defender_lost
		trigger = { 
			event_target:orf_election_opponent_attacker = { has_character_flag = election_won } 
			has_character_flag = election_defender
		}
		add_character_modifier = {
			name = orf_election_lost_cooldown
			duration = 365
		}	
		clr_character_flag = election_defender
		
	}
	
	option = {
		name = EVTOPTA_orf_election_result_agnostic
		trigger = {
			NOT = { has_character_flag = election_defender }
			NOT = { has_character_flag = election_attacker }
		}
	}
}



character_event = {
	id = orfelection.10
	title = EVTTITLE_orf_election_defender_won
	
	picture = GFX_evt_battle
	
	is_triggered_only = yes
	
	trigger = {
	}
	
	desc = {
		text = EVTDESC_orf_election_resigned
	}
	option = { 
		name = EVTOPTA_orf_election_resigned_that_was_easy
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_12 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_12 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_12 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_11 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_11 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_11 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_10 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_10 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_10 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_9 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_9 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_9 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_8 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_8 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_8 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_7 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_7 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_7 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_6 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_6 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_6 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_5 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_5 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_5 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_4 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_4 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_4 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_4 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_4 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_4 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_3 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_3 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_3 }
		}
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_2 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_2 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_2 }
		}		
		if = {
			limit = { event_target:orf_election_opponent_defender = { has_minor_title = title_senator_1 } }
			event_target:orf_election_opponent_attacker = { remove_title = title_senator_1 }
			event_target:orf_election_opponent_defender = { give_title = title_senator_1 }
		}
		event_target:orf_election_opponent_attacker = {
			add_character_modifier = {
				name = orf_election_cooldown
				duration = 1310
			}		
		}
		event_target:orf_election_opponent_defender  = {
			add_character_modifier = {
				name = orf_election_lost_cooldown
				duration = 365
			}		
		}
	}
}





#TODO AI_will_do, and connect it to the rest of the chain
character_event ={#local speech
	id = orfelection.11
	desc = EVTDESC_orfelec_problem_minor_meeting
	#picture = something
	
	only_playable = yes
	capable_only = yes
	is_triggered_only = yes#i..think? maybe we will do a tombola, maybe we will have a MTTH on election events
	
	
	immediate = {
		character_event = {id = orfelection.12 days = 7}	
	}
	option = {
		name = EVTOPTA_orfelec_problem_minor_meeting
		custom_tooltip = {
			text = ORFELECCUSTOM
			random_list = {
				10 = {
					set_character_flag = orfelec_good_11
					mult_modifier = {
						factor = 0
						diplomacy == 0
					}
					mult_modifier = {
						factor = 1.5
						diplomacy = 5
					}
					mult_modifier = {
						factor = 1.5
						diplomacy = 10
					}
					mult_modifier = {
						factor = 1.5
						diplomacy = 15
					}
					mult_modifier = {
						factor = 1.5
						diplomacy = 20
					}
					mult_modifier = {
						factor = 0
						learning == 0
					}
					mult_modifier = {
						factor = 1.5
						learning = 5
					}
					mult_modifier = {
						factor = 1.5
						learning = 10
					}
					mult_modifier = {
						factor = 1.5
						learning = 15
					}
					mult_modifier = {
						factor = 1.5
						learning = 20
					}
					mult_modifier = {
						factor = 2
						OR = {
							trait = socializer
							trait = scholar
						}
					}
				}
				20 = {#neutral
					set_character_flag = orfelec_neutral_11
				}
				40 = {#bad
					set_character_flag = orfelec_bad_11
					mult_modifier = {
						factor = 1.5
						diplomacy == 0
					}
					mult_modifier = {
						factor = 0.75
						diplomacy = 5
					}
					mult_modifier = {
						factor = 0.75
						diplomacy = 10
					}
					mult_modifier = {
						factor = 0.75
						diplomacy = 15
					}
					mult_modifier = {
						factor = 0
						diplomacy = 20
					}
					mult_modifier = {
						factor = 0.75
						learning == 0
					}
					mult_modifier = {
						factor = 0.75
						learning = 5
					}
					mult_modifier = {
						factor = 0.75
						learning = 10
					}
					mult_modifier = {
						factor = 0.75
						learning = 15
					}
					mult_modifier = {
						factor = 0
						learning = 20
					}
					mult_modifier = {
						factor = 0
						OR = {
							trait = socializer
							trait = scholar
						}
					}
				}
			}
		}
	}
	option = {
		name = EVTOPTB_orfelec_problem_minor_meeting
		prestige = -100
		custom_tooltip = {
			text = ORFELECCUSTOM
			random_list = {
				20 = {#good
					set_character_flag = orfelec_good_11
					mult_modifier = {
						factor = 0
						diplomacy == 0
					}
					mult_modifier = {
						factor = 1.5
						diplomacy = 5
					}
					mult_modifier = {
						factor = 1.5
						diplomacy = 10
					}
					mult_modifier = {
						factor = 1.5
						diplomacy = 15
					}
					mult_modifier = {
						factor = 1.5
						diplomacy = 20
					}
					mult_modifier = {
						factor = 0
						prestige < 0
					}
					mult_modifier = {
						factor = 1.5
						prestige = 500
					}
					mult_modifier = {
						factor = 1.5
						prestige = 1000
					}
					mult_modifier = {
						factor = 1.5
						prestige = 2000
					}
					mult_modifier = {
						factor = 1.5
						prestige = 4000
					}
					mult_modifier = {
						factor = 2
						OR = {
							trait = socializer
						}
					}
				}
				20 = {#neutral
					set_character_flag = orfelec_neutral_11
				}
				40 = {#bad
					set_character_flag = orfelec_bad_11
					mult_modifier = {
						factor = 1.5
						diplomacy == 0
					}
					mult_modifier = {
						factor = 0.75
						diplomacy = 5
					}
					mult_modifier = {
						factor = 0.75
						diplomacy = 10
					}
					mult_modifier = {
						factor = 0.75
						diplomacy = 15
					}
					mult_modifier = {
						factor = 0
						diplomacy = 20
					}
					mult_modifier = {
						factor = 0.75
						learning == 0
					}
					mult_modifier = {
						factor = 0.75
						learning = 5
					}
					mult_modifier = {
						factor = 0.75
						learning = 10
					}
					mult_modifier = {
						factor = 0.75
						learning = 15
					}
					mult_modifier = {
						factor = 0
						learning = 20
					}
					mult_modifier = {
						factor = 0
						OR = {
							trait = socializer
						}
					}
				}
			}
		}
	}
	option = {
		name = EVTOPTC_orfelec_problem_minor_meeting
		custom_tooltip = {
			text = ORFELECCUSTOM
			random_list = {
				10 = {
					set_character_flag = orfelec_good_11
					mult_modifier = {
						factor = 0
						diplomacy == 0
					}
					mult_modifier = {
						factor = 1.5
						diplomacy = 5
					}
					mult_modifier = {
						factor = 1.5
						diplomacy = 10
					}
					mult_modifier = {
						factor = 1.5
						diplomacy = 15
					}
					mult_modifier = {
						factor = 1.5
						diplomacy = 20
					}
					mult_modifier = {
						factor = 0
						intrigue == 0
					}
					mult_modifier = {
						factor = 1.5
						intrigue = 5
					}
					mult_modifier = {
						factor = 1.5
						intrigue = 10
					}
					mult_modifier = {
						factor = 1.5
						intrigue = 15
					}
					mult_modifier = {
						factor = 1.5
						intrigue = 20
					}
					mult_modifier = {
						factor = 2
						OR = {
							trait = socializer
							trait = master_schemer
						}
					}
				}
				20 = {#neutral
					set_character_flag = orfelec_neutral_11
				}
				40 = {#bad
					set_character_flag = orfelec_bad_11
					mult_modifier = {
						factor = 1.5
						diplomacy == 0
					}
					mult_modifier = {
						factor = 0.75
						diplomacy = 5
					}
					mult_modifier = {
						factor = 0.75
						diplomacy = 10
					}
					mult_modifier = {
						factor = 0.75
						diplomacy = 15
					}
					mult_modifier = {
						factor = 0
						diplomacy = 20
					}
					mult_modifier = {
						factor = 0.75
						intrigue == 0
					}
					mult_modifier = {
						factor = 0.75
						intrigue = 5
					}
					mult_modifier = {
						factor = 0.75
						intrigue = 10
					}
					mult_modifier = {
						factor = 0.75
						intrigue = 15
					}
					mult_modifier = {
						factor = 0
						intrigue = 20
					}
					mult_modifier = {
						factor = 0
						OR = {
							trait = socializer
							trait = schemer
						}
					}
				}
			}
		}
	}
}

character_event ={#resolved
	id = orfelection.12
	desc = {
		trigger = { has_character_flag = orfelec_good_11}
		text =EVTDESC_orfelec_resolve_good_minor_meeting
	}
	desc = {
		trigger = { has_character_flag = orfelec_neutral_11}
		text =EVTDESC_orfelec_resolve_neutral_minor_meeting
	}
	desc = {
		trigger = { has_character_flag = orfelec_bad_11}
		text =EVTDESC_orfelec_resolve_bad_minor_meeting
	}
	#picture = something
	
	only_playable = yes
	capable_only = yes
	is_triggered_only = yes
	
	option = {
		trigger = { has_character_flag = orfelec_good_11}
		name = EVTOPT_orfelec_resolve_good_minor_meeting
	}
	option = {
		trigger = { has_character_flag = orfelec_neutral_11}
		name = EVTOPT_orfelec_resolve_neutral_minor_meeting
	}
	option = {
		trigger = { has_character_flag = orfelec_bad_11}
		name = EVTOPT_orfelec_resolve_bad_minor_meeting
	}
}


character_event ={#Merchants arrive
	id = orfelection.13
	desc = EVTDESC_orfelec_problem_merchants
	
	only_playable = yes
	capable_only = yes
	is_triggered_only = yes#i..think? maybe we will do a tombola, maybe we will have a MTTH on election events
	
	
	immediate = {
		narrative_Event = {id = orfelection.14 days = 7}
	}
	option = {
		name = EVTOPTA_orfelec_problem_merchants
		custom_tooltip = {
			random_list = {
				10 = {#good
					set_character_flag = orfelec_good_13
					mult_modifier = {
						factor = 0
						stewardship == 0
					}
					mult_modifier = {
						factor = 2
						stewardship = 5
					}
					mult_modifier = {
						factor = 2
						stewardship = 10
					}
					mult_modifier = {
						factor = 2
						stewardship = 15
					}
					mult_modifier = {
						factor = 2
						stewardship = 20
					}
					mult_modifier = {
						factor = 2
						trait = architect #kinda odd, but that's the business focus lifestyle trait
					}
				}
				20 = {#neutral
					set_character_flag = orfelec_neutral_13
				}
				40 = {#bad
					set_character_flag = orfelec_bad_13
					mult_modifier = {
						factor = 2
						stewardship == 0
					}
					mult_modifier = {
						factor = 0.5
						stewardship = 5
					}
					mult_modifier = {
						factor = 0.5
						stewardship = 10
					}
					mult_modifier = {
						factor = 0.5
						stewardship = 15
					}
					mult_modifier = {
						factor = 0
						OR = {
							stewardship = 20
							trait = architect`
						}
					}
				}
			}
			text = ORFELECCUSTOM
		}
	}
	option = {
		name = EVTOPTB_orfelec_problem_merchants
		wealth = -50
		prestige = -50
		custom_tooltip = {
			random_list = {
				15 = {#good			
					set_character_flag = orfelec_good_13
					mult_modifier = {
						factor = 2
						trait = groomed
					}
					mult_modifier = {
						factor = 2
						trait = socializer
					}
					mult_modifier = {
						factor = 1.3
						trait = gregarious
					}
					mult_modifier = {
						factor = 1.3
						trait = administrator
					}
					mult_modifier = {
						factor = 0.7
						trait = shy
					}
					mult_modifier = {
						factor = 0.8
						trait = cruel
					}
					mult_modifier = {
						factor = 0
						trait = uncouth
					}
				}
				20 = {#neutral
					set_character_flag = orfelec_neutral_13
				}
				30 = {#bad
					set_character_flag = orfelec_bad_13
					mult_modifier = {
						factor = 0
						trait = groomed
					}
					mult_modifier = {
						factor = 0
						trait = socializer
					}
					mult_modifier = {
						factor = 0.6
						trait = gregarious
					}
					mult_modifier = {
						factor = 0.7
						trait = administrator
					}
					mult_modifier = {
						factor = 1.3
						trait = shy
					}
					mult_modifier = {
						factor = 1.2
						trait = cruel
					}
					mult_modifier = {
						factor = 2
						trait = uncouth
					}
				}
			}
			text = ORFELECCUSTOM
		}
	}
	option = {
		name = EVTOPTC_orfelec_problem_merchants
		custom_tooltip = {
			random_list = {
				20 = {#good
					set_character_flag = orfelec_good_13
				}
				30 = {#neutral
					set_character_flag = orfelec_neutral_13
				}
				20 = {#bad
					set_character_flag = orfelec_bad_13
				}
			}
			text = ORFELECCUSTOM
		}		
	}
}

character_event ={#resolved
	id = orfelection.14
	desc = {
		trigger = { has_character_flag = orfelec_good_13}
		text =EVTDESC_orfelec_resolve_good_merchants
	}
	desc = {
		trigger = { has_character_flag = orfelec_neutral_13}
		text =EVTDESC_orfelec_resolve_neutral_merchants
	}
	desc = {
		trigger = { has_character_flag = orfelec_bad_13}
		text =EVTDESC_orfelec_resolve_bad_merchants
	}
	only_playable = yes
	capable_only = yes
	is_triggered_only = yes
	option = {
		trigger = { has_character_flag = orfelec_good_13}
		name = EVTOPT_orfelec_resolve_good_merchants
	}
	option = {
		name = EVTOPT_orfelec_resolve_neutral_merchants
		trigger = { has_character_flag = orfelec_neutral_13}
	}
	option = {
		name = EVTOPT_orfelec_resolve_bad_merchants
		trigger = { has_character_flag = orfelec_bad_13}
	}
}

character_event ={#a problem occurs
	id = orfelection.15
	desc = EVTDESC_orfelec_problem_rangers
	
	only_playable = yes
	capable_only = yes
	is_triggered_only = yes#i..think? maybe we will do a tombola, maybe we will have a MTTH on election events
	
	
	immediate = {
		character_event = {id = orfelection.16 days = 7}
	}
	option = {#skill one
		name = EVTOPTA_orfelec_problem_rangers
		custom_tooltip = {
			text = ORFELECCUSTOM
			random_list = {
				10 = {#good
					set_character_flag = orfelec_good_15
					mult_modifier = {
						factor = 0
						diplomacy == 0
					}
					mult_modifier = {
						factor = 2
						diplomacy = 5
					}
					mult_modifier = {
						factor = 2
						diplomacy = 10
					}
					mult_modifier = {
						factor = 2
						diplomacy = 15
					}
					mult_modifier = {
						factor = 2
						diplomacy = 20
					}
					mult_modifier = {
						factor = 2
						trait = socializer
					}
				}
				20 = {#neutral
					set_character_flag = orfelec_neutral_15
				}
				40 = {#bad
					set_character_flag = orfelec_bad_15
					mult_modifier = {
						factor = 2
						diplomacy == 0
					}
					mult_modifier = {
						factor = 0.5
						diplomacy = 5
					}
					mult_modifier = {
						factor = 0.5
						diplomacy = 10
					}
					mult_modifier = {
						factor = 0.5
						diplomacy = 15
					}
					mult_modifier = {
						factor = 0
						OR = {
							diplomacy = 20
							trait = socializer
						}
					}
				}
			}
		}
	}
	option = {
		name = EVTOPTB_orfelec_problem_rangers
		custom_tooltip = {
			text = ORFELECCUSTOM
			random_list = {
				10 = {#good
					set_character_flag = orfelec_good_15
					mult_modifier = {
						factor = 0
						martial == 0
					}
					mult_modifier = {
						factor = 2
						martial = 5
					}
					mult_modifier = {
						factor = 2
						martial = 10
					}
					mult_modifier = {
						factor = 2
						martial = 15
					}
					mult_modifier = {
						factor = 2
						martial = 20
					}
					mult_modifier = {
						factor = 2
						trait = strategist
					}
				}
				20 = {#neutral
					set_character_flag = orfelec_neutral_15
				}
				40 = {#bad
					set_character_flag = orfelec_bad_15
					mult_modifier = {
						factor = 2
						martial == 0
					}
					mult_modifier = {
						factor = 0.5
						martial = 5
					}
					mult_modifier = {
						factor = 0.5
						martial = 10
					}
					mult_modifier = {
						factor = 0.5
						martial = 15
					}
					mult_modifier = {
						factor = 0
						OR = {
							martial = 20
							trait = strategist
						}
					}
					
				}
			}
		}
	}
	option = {
		name = EVTOPTC_orfelec_problem_rangers
		custom_tooltip = {
			text = ORFELECCUSTOM
			random_list = {
				10 = {#good
					set_character_flag = orfelec_good_15
					mult_modifier = {
						factor = 0
						learning == 0
					}
					mult_modifier = {
						factor = 2
						learning = 5
					}
					mult_modifier = {
						factor = 2
						learning = 10
					}
					mult_modifier = {
						factor = 2
						learning = 15
					}
					mult_modifier = {
						factor = 2
						learning = 20
					}
					mult_modifier = {
						factor = 2
						trait = theologian
					}
				}
				20 = {#neutral
					set_character_flag = orfelec_neutral_15
				}
				40 = {#bad
					set_character_flag = orfelec_bad_15
					mult_modifier = {
						factor = 2
						learning == 0
					}
					mult_modifier = {
						factor = 0.5
						learning = 5
					}
					mult_modifier = {
						factor = 0.5
						learning = 10
					}
					mult_modifier = {
						factor = 0.5
						learning = 15
					}
					mult_modifier = {
						factor = 0
						OR = {
							learning = 20
							trait = theologian
						}
					}
				}
			}
		}
	}
}


character_event ={#resolved
	id = orfelection.16
	desc = {
		text =EVTDESC_orfelec_resolve_good_rangers
		trigger = { has_character_flag = orfelec_good_15}
	}
	desc = {
		trigger = { has_character_flag = orfelec_neutral_15}
		text =EVTDESC_orfelec_resolve_neutral_rangers
	}
	desc = {
		trigger = { has_character_flag = orfelec_bad_15}
		text =EVTDESC_orfelec_resolve_bad_rangers
	}
	only_playable = yes
	capable_only = yes
	is_triggered_only = yes
	option = {
		name = EVTOPT_orfelec_resolve_good_rangers
		trigger = { has_character_flag = orfelec_good_15}
	}
	option = {
		trigger = { has_character_flag = orfelec_neutral_15}
		name = EVTOPT_orfelec_resolve_neutral_rangers
	}
	option = {
		name = EVTOPT_orfelec_resolve_bad_rangers
		trigger = { has_character_flag = orfelec_bad_15}
	}
}

##A TEMPLATE FOR ELECTION EVENTS

# character_event ={#a problem occurs
	# desc = EVTDESC_orfelec_problem_example
	
	# only_playable = yes
	# capable_only = yes
	# is_triggered_only = yes#i..think? maybe we will do a tombola, maybe we will have a MTTH on election events
	
	
	# immediate = {
		# narrative_Event = {id = orfelection.nextnumber days = 7}
	# }
	# option = {#skill one
		# name = EVTOPTA_orfelec_problem_example
		# custom_tooltip = {
			# text = ORFELECCUSTOM
			# random_list = {
				# 10 = {#good
					# set_character_flag = orfelec_good
				# }
				# 20 = {#neutral
					# set_character_flag = orfelec_neutral
				# }
				# 10 = {#bad
					# set_character_flag = orfelec_bad
				# }
			#}
		# }
	# }
	# option = {
		# name = EVTOPTB_orfelec_problem_example
		# custom_tooltip = {
			# text = ORFELECCUSTOM
			# random_list = {
				# 10 = {#good
					# set_character_flag = orfelec_good
				# }
				# 20 = {#neutral
					# set_character_flag = orfelec_neutral
				# }
				# 10 = {#bad
					# set_character_flag = orfelec_bad
				# }
			#}
		# }
	# }
	# option = {
		# name = EVTOPTC_orfelec_problem_example
		# custom_tooltip = {
			# text = ORFELECCUSTOM
			# random_list = {
				# 10 = {#good
					# set_character_flag = orfelec_good
				# }
				# 20 = {#neutral
					# set_character_flag = orfelec_neutral
				# }
				# 10 = {#bad
					# set_character_flag = orfelec_bad
				# }
			#}
		# }
	# }
# }


# character_event ={#resolved
	# desc = {
		# trigger = { has_character_flag = orfelec_good}
		# text =EVTDESC_orfelec_resolve_good_example
	# }
	# desc = {
		# trigger = { has_character_flag = orfelec_good}
		# text =EVTDESC_orfelec_resolve_neutral_example
	# }
	# desc = {
		# trigger = { has_character_flag = orfelec_good}
		# text =EVTDESC_orfelec_resolve_bad_example
	# }
	# only_playable = yes
	# capable_only = yes
	# is_triggered_only = yes
	# option = {
		# name = EVTOPT_orfelec_resolve_good_example
		# trigger = { has_character_flag = orfelec_good}
		# clr_character_flag = orfelec_good
	# }
	# option = {
		# trigger = { has_character_flag = orfelec_neutral}
		# name = EVTOPT_orfelec_resolve_neutral_example
		# clr_character_flag = orfelec_neutral
	# }
	# option = {
		# name = EVTOPT_orfelec_resolve_bad_example
		# trigger = { has_character_flag = orfelec_bad}
		# clr_character_flag = orfelec_bad
	# }
# }