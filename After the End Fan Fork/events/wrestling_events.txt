namespace = WR

#Transplant from quest event
character_event = {
	id = WR.1
	hide_window = yes

	is_triggered_only = yes

	immediate = { FROM = { society_quest_event = { id = WR.2 days = 7 random = 7 } } }
}

#Hero wants you to train
society_quest_event = {
	id = WR.2

	desc = EVTDESCWR2

	is_triggered_only = yes

	option = {
		name = ACCEPT

		set_quest = quest_warrior_lodge_mexican_train
	}

	option = {
		name = DECLINE
		custom_tooltip = { text = decline_quest_tooltip }

		add_character_modifier = {
			name = quest_cooldown_timer
			hidden = yes
			days = 1000
		}

		ai_chance = { factor = 0 }
	}
}

character_event = {
	id = WR.3
	desc = EVTDESCWR3
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAWR3
		custom_tooltip = {
			text = you_will_train_TT
		}
		save_event_target_as = w_trainee
		character_event = { id = WR.4 days = 2 random = 3 }
	}
}

character_event = {
    id = WR.4
    is_triggered_only = yes

    hide_window = yes

    trigger = {
        
    }

    immediate = {
        evaluate_how_training_went = yes
    }
}

character_event = {
	id = WR.5
	desc = {
		text = EVTDESCWR5_A
		trigger = {
			has_character_flag = broke_arm
		}
	}
	desc = {
		text = EVTDESCWR5_B
		trigger = {
			has_character_flag = broke_leg
		}
	}
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAWR5
		custom_tooltip = {
			text = no_improve_skills_TT
		}
		add_trait = wounded
		hidden_tooltip = {
			change_variable = { which = "training_var_mission" value = -1 }
		}
		if = {
			limit = {
				has_quest = quest_warrior_lodge_mexican_train
			}
			random_society_member = {
				limit = {
					is_society_grandmaster = yes
					same_society_as = ROOT
				}
				character_event = { id = WR.10 } #Mission success/fail
			}
		}
	}
	
	after = {
		clr_character_flag = broke_arm
		clr_character_flag = broke_leg
	}
}

character_event = {
	id = WR.6
	desc = EVTDESCWR6
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAWR6
		custom_tooltip = {
			text = barely_improve_skills_TT
		}
		event_target:w_trainee = {
			apply_random_minor_injury_effect = yes
		}
		hidden_tooltip = {
			change_variable = { which = "training_var_mission" value = 1 }
			change_variable = { which = "training_var" value = 1 }
		}
		if = {
			limit = {
				has_quest = quest_warrior_lodge_mexican_train
			}
			random_society_member = {
				limit = {
					is_society_grandmaster = yes
					same_society_as = ROOT
				}
				character_event = { id = WR.10 } #Mission success/fail
			}
		}
	}
}

character_event = {
	id = WR.7
	desc = EVTDESCWR7
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAWR7
		custom_tooltip = {
			text = improve_skills_TT
		}
		add_character_modifier = {
			modifier = fine_workout
			months = 10
		}
		hidden_tooltip = {
			change_variable = { which = "training_var_mission" value = 2 }
			change_variable = { which = "training_var" value = 1 }
		}
		if = {
			limit = {
				has_quest = quest_warrior_lodge_mexican_train
			}
			random_society_member = {
				limit = {
					is_society_grandmaster = yes
					same_society_as = ROOT
				}
				character_event = { id = WR.10 } #Mission success/fail
			}
		}
	}
}

character_event = {
	id = WR.8
	desc = EVTDESCWR8
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAWR8
		custom_tooltip = {
			text = improve_skills_TT
		}
		add_character_modifier = {
			modifier = good_workout
			months = 10
		}
		hidden_tooltip = {
			change_variable = { which = "training_var_mission" value = 3 }
			change_variable = { which = "training_var" value = 1 }
		}
		if = {
			limit = {
				has_quest = quest_warrior_lodge_mexican_train
			}
			random_society_member = {
				limit = {
					is_society_grandmaster = yes
					same_society_as = ROOT
				}
				character_event = { id = WR.10 } #Mission success/fail
			}
		}
	}
}

character_event = {
	id = WR.9
	desc = EVTDESCWR9
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAWR9
		custom_tooltip = {
			text = greatly_improve_skills_TT
		}
		add_character_modifier = {
			modifier = excellent_workout
			months = 10
		}
		hidden_tooltip = {
			change_variable = { which = "training_var_mission" value = 4 }
			change_variable = { which = "training_var" value = 1 }
		}
		if = {
			limit = {
				has_quest = quest_warrior_lodge_mexican_train
			}
			random_society_member = {
				limit = {
					is_society_grandmaster = yes
					same_society_as = ROOT
				}
				character_event = { id = WR.10 } #Mission success/fail
			}
		}
	}
}

character_event = {
	id = WR.10
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { FROM = { check_variable = { which = training_var_mission value > 0 } } }
			FROM = { letter_event = { id = WR.11 } }
		}
		else = {
			FROM = { letter_event = { id = WR.12 } }
		}
	}
}

#Success
letter_event = {
	id = WR.11
	desc = EVTDESCWR11
	is_triggered_only = yes
	
	trigger = {
		has_quest = quest_warrior_lodge_mexican_train
	}

	option = {
		name = EVTOPTAWR11

		if = {
			limit = { has_quest = quest_warrior_lodge_mexican_train }
			clr_quest = quest_warrior_lodge_mexican_train
		}
		if = {
			limit = {
				check_variable = { which = "training_var_mission" value = 2 }
			}
			add_society_currency_major_effect = yes
		}
		else = {
			add_society_currency_medium_effect = yes
		}
		add_character_modifier = {
			name = quest_cooldown_timer
			hidden = yes
			days = 1000
		}
	}
	
	after = {
		hidden_effect = {
			change_variable = { which = "training_var_mission" value = 0 }
		}
	}
}

#Training failure
letter_event = {
	id = WR.12
	desc = EVTDESCWR12
	is_triggered_only = yes

	trigger = {
		has_quest = quest_warrior_lodge_mexican_train
	}

	option = {
		name = EVTOPTAWR12

		if = {
			limit = { has_quest = quest_warrior_lodge_mexican_train }
			clr_quest = { id = quest_warrior_lodge_mexican_train failure = yes }
		}
		add_character_modifier = {
			name = quest_cooldown_timer
			hidden = yes
			days = 1000
		}
	}
	
	after = {
		hidden_effect = {
			change_variable = { which = "training_var_mission" value = 0 }
		}
	}
}

#Randomly become strong
character_event = {
	id = WR.13
	desc = EVTDESCWR13
	picture = GFX_evt_fishing
	is_triggered_only = yes
	
	trigger = {
		has_dlc "Holy Fury"
		society_member_of = warrior_lodge_mexican
		NOR = {
			trait = robust
			trait = strong
		}
		ROOT = { check_variable = { which = training_var value > 3 } }
	}
	
	mean_time_to_happen = {
		months = 32
	}
	
	option = {
		name = EVTOPTAWR13
		
		random_list = {
			75 = {
				add_trait = robust
			}
			25 = {
				add_trait = strong
			}
		}
	}
}

#Choose persona
society_quest_event = {
	id = WR.100
	desc = EVTDESCWR100

	is_triggered_only = yes

	option = {
		name = ACCEPT
		set_quest = quest_warrior_lodge_mexican_persona
	}
	option = {
		name = DECLINE
		custom_tooltip = { text = decline_quest_tooltip }

		add_character_modifier = {
			name = quest_cooldown_timer
			hidden = yes
			days = 1000
		}

		ai_chance = { factor = 0 }
	}
}

character_event = {
	id = WR.101
	desc = EVTDESCWR101
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAWR101
		custom_tooltip = {
			text = become_face_TT
		}
		add_trait = w_face
		if = {
			limit = {
				has_quest = quest_warrior_lodge_mexican_persona
			}
			random_society_member = {
				limit = {
					is_society_grandmaster = yes
					same_society_as = ROOT
				}
				character_event = { id = WR.102 } #Get your points, boy
			}
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.2
				OR = {
					is_evil_trigger = yes
					is_impious_trigger = yes
				}
			}
			modifier = {
				factor = 0.6
				OR = {
					has_unpleasant_personality_trigger = yes
					has_vice_trigger = yes
				}
			}
			modifier = {
				factor = 1.5
				OR = {
					has_benevolent_trait_trigger = yes
					has_pleasant_personality_trigger = yes
				}
			}
			modifier = {
				factor = 1.2
				OR = {
					is_pious_trigger = yes
					has_virtue_trigger = yes
				}
			}
		}
	}
	option = {
		name = EVTOPTBWR101
		custom_tooltip = {
			text = become_heel_TT
		}
		add_trait = w_heel
		if = {
			limit = {
				has_quest = quest_warrior_lodge_mexican_persona
			}
			random_society_member = {
				limit = {
					is_society_grandmaster = yes
					same_society_as = ROOT
				}
				character_event = { id = WR.102 } #Get your points, boy
			}
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				OR = {
					is_evil_trigger = yes
					is_impious_trigger = yes
				}
			}
			modifier = {
				factor = 1.2
				OR = {
					has_unpleasant_personality_trigger = yes
					has_vice_trigger = yes
				}
			}
			modifier = {
				factor = 0.2
				OR = {
					has_benevolent_trait_trigger = yes
					has_pleasant_personality_trigger = yes
				}
			}
			modifier = {
				factor = 0.6
				OR = {
					is_pious_trigger = yes
					has_virtue_trigger = yes
				}
			}
		}
	}
}

character_event = {
	id = WR.102
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		FROM = { letter_event = { id = WR.103 } }
	}
}

letter_event = {
	id = WR.103
	desc = EVTDESCWR103
	is_triggered_only = yes
	
	trigger = {
		has_quest = quest_warrior_lodge_mexican_persona
	}

	option = {
		name = EVTOPTAWR103

		if = {
			limit = { has_quest = quest_warrior_lodge_mexican_persona }
			clr_quest = quest_warrior_lodge_mexican_persona
		}
		add_society_currency_medium_effect = yes
	}
}

#Choosing style
character_event = {
	id = WR.104
	desc = EVTDESCWR104
	
	is_triggered_only = yes
	
	option = {
		name = EVTOPTAWR104
		custom_tooltip = {
			text = become_eagle_TT
		}
		add_trait = w_eagle
		ai_chance = {
			factor = 33
			modifier = {
				factor = 1.2
				has_lifestyle_martial_trigger = yes
			}
		}
	}
	option = {
		name = EVTOPTBWR104
		custom_tooltip = {
			text = become_jaguar_TT
		}
		add_trait = w_jaguar
		ai_chance = {
			factor = 33
			modifier = {
				factor = 0.2
				is_weak_trigger = yes
			}
			modifier = {
				factor = 1.2
				has_education_martial_trigger = yes
			}
			modifier = {
				factor = 1.5
				is_strong_trigger = yes
			}
		}
	}
	option = {
		name = EVTOPTCWR104
		custom_tooltip = {
			text = become_snake_TT
		}
		add_trait = w_snake
		ai_chance = {
			factor = 33
			modifier = {
				factor = 1.2
				is_smart_trigger = yes
			}
			modifier = {
				factor = 0.2
				is_dumb_trigger = yes
			}
		}
	}
}

#Randomly become gay
character_event = {
	id = WR.200
	desc = EVTDESCWR200
	picture = GFX_evt_scandal
	is_triggered_only = yes
	
	trigger = {
		has_dlc "Holy Fury"
		society_member_of = warrior_lodge_mexican
		NOT = {
			trait = homosexual
		}
	}
	
	option = {
		name = EVTOPTAWR200
		
		add_trait = homosexual
		
		random = {
			factor = 15
			add_trait = lustful
		}
	}
}

character_event = {
	id = WR.300
	hide_window = yes
	
	mean_time_to_happen = {
		months = 48
	}
	
	trigger = {
		has_dlc "Holy Fury"
		society_member_of = warrior_lodge_mexican
		OR = {
			trait = w_face
			trait = w_heel
		}
	}
	
	immediate = {
		if = {
			limit = {
				trait = w_face
			}
			mexican_purity_effect = yes
		}
		if = {
			limit = {
				trait = w_heel
			}
			mexican_impurity_effect = yes
		}
	}
}

character_event = {
	id = WR.301
	
	picture = GFX_evt_religious_exultation
	desc = EVTDESCWR301

	is_triggered_only = yes

	trigger = {
		society_member_of = warrior_lodge_mexican
		OR = {
			trait = greedy
			trait = envious
			trait = wroth
			trait = proud
			trait = deceitful
			trait = cruel
			trait = ambitious
			NOT = { trait = humble }
			NOT = { trait = charitable }
			NOT = { trait = kind }
			NOT = { trait = honest }
			NOT = { trait = patient }
			NOT = { trait = diligent }
		}
	}

	immediate = {
		#FIRST STAGE
		#Removes cynic, gluttonous, greedy, slothful, lustful, envious, wrath, pride, deceitful, 
		#Adds humble, charitable
		if = {
			limit = {
				OR = {
					trait = greedy
					trait = envious
					trait = wroth
					trait = proud
					trait = deceitful
					trait = cruel
					NOT = { trait = humble }
					NOT = { trait = charitable }
				}
			}
			random_list = {
				10 = {
					modifier = { factor = 0 NOT = { trait = greedy } }
					set_character_flag = purity_remove_greedy
				}
				10 = {
					modifier = { factor = 0 NOT = { trait = slothful } }
					set_character_flag = purity_remove_slothful
				}
				10 = {
					modifier = { factor = 0 NOT = { trait = envious } }
					set_character_flag = purity_remove_envious
				}
				10 = {
					modifier = { factor = 0 NOT = { trait = wroth } }
					set_character_flag = purity_remove_wroth
				}
				10 = {
					modifier = { factor = 0 NOT = { trait = proud } }
					set_character_flag = purity_remove_proud
				}
				10 = {
					modifier = { factor = 0 NOT = { trait = deceitful } }
					set_character_flag = purity_remove_deceitful
				}
				10 = {
					modifier = { factor = 0 NOT = { trait = cruel } }
					set_character_flag = purity_remove_cruel
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							trait = humble
							trait = proud
						}
					}
					set_character_flag = purity_add_humble
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							trait = charitable
							trait = greedy
						}
					}
					set_character_flag = purity_add_charitable
				}
			}
		}
	
		#SECOND STAGE
		#Add traits chaste, kind, temperate, honest
		if = {
			limit = {
				NOR = {
					trait = envious
					trait = wroth
					trait = deceitful
					trait = cruel
				}
				trait = charitable
				trait = humble
				NAND = {
					trait = kind
					trait = honest
				}
			}
			random_list = {
				10 = {
					modifier = { factor = 0 trait = kind }
					set_character_flag = purity_add_kind
				}
				10 = {
					modifier = { factor = 0 trait = honest }
					set_character_flag = purity_add_honest
				}
			}
		}
		#THIRD STAGE
		#Removes ambitious
		#Adds patient, diligent, content
		if = {
			limit = {
				NOR = {
					trait = wroth
					trait = cruel
				}
				trait = charitable
				trait = humble
				trait = kind
				trait = honest
			}

			random_list = {
				10 = {
					modifier = { factor = 0 trait = patient }
					set_character_flag = purity_add_patient
				}
			}
		}
	}

	option = {
		name = EVTOPTAWR301

		trigger_switch = {
			on_trigger = has_character_flag
			purity_remove_greedy		= { remove_trait = greedy }
			purity_remove_envious		= { remove_trait = envious }
			purity_remove_wroth			= { remove_trait = wroth }
			purity_remove_proud			= { remove_trait = proud }
			purity_remove_deceitful     = { remove_trait = deceitful }
			purity_remove_cruel			= { remove_trait = cruel }
			purity_add_humble			= { add_trait = humble }
			purity_add_charitable		= { add_trait = charitable }
			purity_add_kind				= { add_trait = kind }
			purity_add_honest			= { add_trait = honest }
			purity_add_patient			= { add_trait = patient }
		}

		clr_character_flag = purity_remove_cynical
		clr_character_flag = purity_remove_gluttonous
		clr_character_flag = purity_remove_greedy
		clr_character_flag = purity_remove_slothful
		clr_character_flag = purity_remove_envious
		clr_character_flag = purity_remove_wroth
		clr_character_flag = purity_remove_proud
		clr_character_flag = purity_remove_deceitful
		clr_character_flag = purity_remove_cruel
		clr_character_flag = purity_remove_lustful
		clr_character_flag = purity_add_humble
		clr_character_flag = purity_add_charitable
		clr_character_flag = purity_add_chaste
		clr_character_flag = purity_add_kind
		clr_character_flag = purity_add_temperate
		clr_character_flag = purity_add_honest
		clr_character_flag = purity_remove_ambitious
		clr_character_flag = purity_add_content
		clr_character_flag = purity_add_patient
		clr_character_flag = purity_add_diligent
	}
}

character_event = {
	id = WR.302

	desc = EVTDESCWR302
	picture = GFX_evt_bad_news

	is_triggered_only = yes

	trigger = {
		society_member_of = warrior_lodge_mexican
		OR = {
			trait = charitable
			trait = kind
			trait = patient
			trait = humble
			trait = honest
			trait = kind
			NOT = { trait = proud }
			NOT = { trait = greedy }
			NOT = { trait = envious }
			NOT = { trait = deceitful }
			NOT = { trait = wroth }
		}
	}

	immediate = {
		#FIRST STAGE
		#Removes cynic, gluttonous, greedy, slothful, lustful, envious, wrath, pride, deceitful, 
		#Adds humble, charitable
		if = {
			limit = {
				OR = {
					trait = charitable
					trait = kind
					trait = patient
					trait = humble
					trait = honest
					trait = kind
					NOT = { trait = charitable }
				}
			}
			random_list = {
				10 = {
					modifier = { factor = 0 NOT = { trait = charitable } }
					set_character_flag = purity_remove_charitable
				}
				10 = {
					modifier = { factor = 0 NOT = { trait = kind } }
					set_character_flag = purity_remove_kind
				}
				10 = {
					modifier = { factor = 0 NOT = { trait = patient } }
					set_character_flag = purity_remove_patient
				}
				10 = {
					modifier = { factor = 0 NOT = { trait = humble } }
					set_character_flag = purity_remove_humble
				}
				10 = {
					modifier = { factor = 0 NOT = { trait = honest } }
					set_character_flag = purity_remove_honest
				}
				10 = {
					modifier = { factor = 0 NOT = { trait = kind } }
					set_character_flag = purity_remove_kind
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							trait = humble
							trait = proud
						}
					}
					set_character_flag = purity_add_proud
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							trait = charitable
							trait = greedy
						}
					}
					set_character_flag = purity_add_greedy
				}
			}
		}
	
		#SECOND STAGE
		#Add traits chaste, kind, temperate, honest
		if = {
			limit = {
				NOR = {
					trait = kind
					trait = patient
					trait = honest
					trait = kind
				}
				trait = greedy
				trait = proud
				NAND = {
					trait = envious
					trait = proud
				}
			}
			random_list = {
				10 = {
					modifier = { factor = 0 trait = envious }
					set_character_flag = purity_add_envious
				}
				10 = {
					modifier = { factor = 0 trait = deceitful }
					set_character_flag = purity_add_deceitful
				}
			}
		}
		#THIRD STAGE
		#Removes ambitious
		#Adds patient, diligent, content
		if = {
			limit = {
				NOT = {
					trait = kind
				}
				trait = greedy
				trait = proud
				trait = envious
				trait = deceitful
			}

			random_list = {
				10 = {
					modifier = { factor = 0 trait = wroth }
					set_character_flag = purity_add_wroth
				}
			}
		}
	}

	option = {
		name = EVTOPTAWR302

		trigger_switch = {
			on_trigger = has_character_flag
			purity_remove_charitable		= { remove_trait = charitable }
			purity_remove_kind				= { remove_trait = kind }
			purity_remove_patient			= { remove_trait = patient }
			purity_remove_humble			= { remove_trait = humble }
			purity_remove_honest    		= { remove_trait = honest }
			purity_add_proud				= { add_trait = proud }
			purity_add_greedy				= { add_trait = greedy }
			purity_add_envious				= { add_trait = envious }
			purity_add_deceitful			= { add_trait = deceitful }
			purity_add_wroth				= { add_trait = wroth }
		}

		clr_character_flag = purity_remove_charitable
		clr_character_flag = purity_remove_kind
		clr_character_flag = purity_remove_patient
		clr_character_flag = purity_remove_humble
		clr_character_flag = purity_remove_honest
		clr_character_flag = purity_add_proud
		clr_character_flag = purity_add_greedy
		clr_character_flag = purity_add_kind
		clr_character_flag = purity_add_envious
		clr_character_flag = purity_add_deceitful
		clr_character_flag = purity_add_wroth
	}
}

character_event = {
    id = WR.400
    is_triggered_only = yes
    hide_window = yes
    #ai = no

    trigger = {
        NOT = { has_character_flag = is_being_recruited_to_warrior_lodge_by_parent }
        NOT = { has_character_flag = awaiting_initiation_trial }
        FROM = { leader = { society_member_of = warrior_lodge_mexican } }
    }

    immediate = {
        FROM = { save_event_target_as = warrior_lodge_to_join } #used later for joining correct society
        set_character_flag = society_join_block
        set_character_flag = awaiting_initiation_trial
        save_event_target_as = new_recruit

        if = { #Find a non-prisoner member
            limit = { FROM = { leader = { prisoner = yes } } }
            FROM = {
                random_society_member = {
                    limit = { 
                        society_member_of = event_target:warrior_lodge_to_join
                        society_rank == 4
                        prisoner = no
                    }
                    character_event = { id = WR.401 }
                    break = yes
                }
                random_society_member = {
                    limit = { 
                        society_member_of = event_target:warrior_lodge_to_join
                        society_rank == 3
                        prisoner = no
                    }
                    character_event = { id = WR.401 }
                    break = yes
                }
                random_society_member = {
                    limit = { 
                        society_member_of = event_target:warrior_lodge_to_join
                        society_rank == 2
                        prisoner = no
                    }
                    character_event = { id = WR.401 }
                    break = yes
                }
                random_society_member = {
                    limit = { 
                        society_member_of = event_target:warrior_lodge_to_join
                        society_rank == 1
                        prisoner = no
                    }
                    character_event = { id = WR.401 }
                    break = yes
                }
            }
            #Everyone is somehow in prison so just use the leader anyway
        }
        FROM = { leader = { character_event = { id = WR.401 } } }
    }
}

character_event = {
    id = WR.401
    desc = EVTOPTAWR302
    picture = GFX_evt_melee
    border = GFX_event_normal_frame_war
    is_triggered_only = yes
    
    immediate = { hidden_effect = { save_event_target_as = hero_character } }

    option = {
        name = EVTOPTA_HF_10004 #I'll put on my most intimidating face
        custom_tooltip = { text = EVTOPTAWR401_TT }
        add_legend_progress_trivial_effect = yes
        hidden_effect = {
            event_target:new_recruit = { character_event = { id = WR.402 } } #sends event to player
        }
    }
}

character_event = {
    id = WR.402
    desc = EVTDESC_HF_10005
    picture = GFX_evt_teaching_moment
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    # immediate = {
        # if = {
            # limit = {
                # any_owned_bloodline = {
                    # has_bloodline_flag = bloodline_legendary_warrior
                # }
            # }
            # random_owned_bloodline = {
                # limit = {
                    # has_bloodline_flag = bloodline_legendary_warrior
                # }
                # preferred_limit = {
                    # founder = { NOT = { character = ROOT } }   
                # }
                # founder = { save_event_target_as = founder_target }
            # }
        # }
    # }

    option = { #I'll gladly fight to prove myself!
        name = EVTOPTA_HF_10005 #default "Yeah, sure"
        custom_tooltip = { text = EVTOPTAWR402_TT }
        hidden_effect = {
            event_target:hero_character = { #Sends notification to the hero character
                set_character_flag = they_accepted@ROOT
                character_event = { id = WR.403 }
            }
        }
		
		set_character_flag = los_luchadores
        
        #FALLBACK:
        if = { #If FROM is no longer alive, clear relevant flags, etc...
            limit = { FROM = { NOT = { is_alive = yes } } }
            reset_warrior_lodge_joining_chain_effect = yes
        }
        ai_chance = {
            factor = 100
        }
    }
    option = { #I changed my mind...
        name = EVTOPTB_HF_10005
        custom_tooltip = { text = EVTOPTB_HF_10005_TT }

        tooltip = {
            reverse_opinion = {
                who = event_target:hero_character
                modifier = opinion_disappointed
                years = 5
            }
        }
        ai_chance = {
            factor = 1
            modifier = {
                factor = 0
                has_character_flag = is_being_recruited_to_warrior_lodge_by_parent
            }
        }

        hidden_effect = {
            clr_character_flag = society_join_block
            clr_character_flag = awaiting_initiation_trial
            event_target:hero_character = { #Sends notification to the hero character
                set_character_flag = they_declined@ROOT
                character_event = { id = WR.403 }
            }
        }
    }
}

character_event = {
    id = WR.403
    picture = GFX_evt_melee
    border = GFX_event_normal_frame_war
    is_triggered_only = yes
    
    immediate = {
        hidden_effect = { #Selects duel targets...
            if = {
                limit = { has_character_flag = they_accepted@FROM }
                any_society_member = {
                    limit = { same_society_as = ROOT }
                    score_value = {  #Prioritizes selecting a rank 1 member, who's available...!
                        value = 1
                        #Ranks...
                        additive_modifier = {
                            society_rank == 1
                            value = 100000
                        }
                        additive_modifier = {
                            society_rank == 2
                            value = 1000
                        }
                        additive_modifier = {
                            society_rank == 3
                            value = 10
                        }
                        additive_modifier = {
                            society_rank == 4
                            value = 1
                        }
                        #The fighters should be somewhat evenly matched...
                        additive_modifier = {
                            OR = {
                                AND = {
                                    duelist_skill_is_low_group_trigger = yes
                                    FROM = { duelist_skill_is_low_group_trigger = yes }
                                }
                                AND = {
                                    duelist_skill_is_medium_group_trigger = yes
                                    FROM = { duelist_skill_is_medium_group_trigger = yes }
                                }
                                AND = {
                                    duelist_skill_is_high_group_trigger = yes
                                    FROM = { duelist_skill_is_high_group_trigger = yes }
                                }
                            }
                            value = 1000
                        }
                        #If recruit is bad duelist, the fighters should be as evenly bad as can be...
                        additive_modifier = {
                            OR = {
                                AND = {
                                    is_the_worst_duelist_trigger = yes
                                    FROM = { is_the_worst_duelist_trigger = yes }
                                }
                                AND = {
                                    is_terrible_duelist_trigger = yes
                                    FROM = { is_terrible_duelist_trigger = yes }
                                }
                                AND = {
                                    is_bad_duelist_trigger = yes
                                    FROM = { is_bad_duelist_trigger = yes }
                                }
                            }
                            value = 1000
                        }
                        #Relationship with FROM... (so new ones can form)
                        additive_modifier = {
                            NOR = {
                                is_rival = FROM
                                is_lover = FROM
                                is_friend = FROM
                            }
                            value = 100
                        }
                        additive_modifier = {
                            OR = {
                                reverse_has_opinion_modifier = { who = FROM modifier = opinion_hate }
                                reverse_has_opinion_modifier = { who = FROM modifier = opinion_tortured_me }
                                reverse_has_opinion_modifier = { who = FROM modifier = opinion_mutilated_me }
                                reverse_has_opinion_modifier = { who = FROM modifier = opinion_imprisoned }
                            }
                            value = 100
                        }
                        additive_modifier = {
                            FROM = { PREV = { prev_is_lonely_this_romance_makes_sense_trigger = yes } }
                            value = 200
                        }
                        #Shouldn't be in prison/incapable, etc...
                        additive_modifier = {
                            block_general_event_trigger = yes
                            value = -5000
                        }
                        #Shouldn't be ROOT in this case...
                        additive_modifier = {
                            character = ROOT
                            value = -1000
                        }
                        #Should *absolutely* preferably be an AI...
                        additive_modifier = {
                            NOT = { ai = yes }
                            value = -1000
                        }
                        #Shouldn't be sick, etc...
                        additive_modifier = {
                            value = -500
                            OR = {
                                has_character_modifier = bedridden_illness
                                has_character_modifier = severe_illness
                                character_disease_trigger = yes
                                has_severe_disability_trigger = yes
                            }
                        }
                        #Shouldn't be prone to dying and breaking the events...
                        additive_modifier = {
                            value = -500
                            OR = {
                                age = 60
                                is_maimed_trigger = yes #has a maimed trait
                            }
                        }
                    }
                    save_event_target_as = duel_target
                }
            }
        }
    }

    desc = {
        text = EVTDESCWR403_yes
        trigger = {
            has_character_flag = they_accepted@FROM
        }
    }
    desc = {
        text = EVTDESCWR403_no
        trigger = {
            has_character_flag = they_declined@FROM
        }
    }

    option = { #Let's find someone to duel them!
        name = EVTOPTA_HF_10006_yes
        custom_tooltip = { text = EVTOPTAWR403_TT_1 }
        show_portrait = event_target:duel_target
        trigger = {
            has_character_flag = they_accepted@FROM
        }
    }
    option = { #That little coward
        name = EVTOPTA_HF_10006_no
        opinion = {
            who = FROM
            modifier = opinion_disappointed
            years = 5
        }
        trigger = {
            has_character_flag = they_declined@FROM
        }
    }
    after = {
        hidden_effect = {
            if = {
                limit = {
                    has_character_flag = they_accepted@FROM    
                }
                event_target:new_recruit = { character_event = { id = WR.404 } } #send ping to set up duel
            }
            clr_character_flag = they_accepted@FROM
            clr_character_flag = they_declined@FROM
        }
    }
}

character_event = {
    id = WR.404
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        #FALLBACK:
        if = { #If FROM is no longer alive, clear relevant flags, etc...
            limit = { event_target:duel_target = { NOT = { is_alive = yes } } } 
            reset_warrior_lodge_joining_chain_effect = yes
        }

        set_character_flag = mock_duel
        #REQUIRED event targets for setting up duel evaluation! (1 & 2)
        save_event_target_as = combatant_1 #the person issuing the duel...
        event_target:duel_target = {
            save_event_target_as = combatant_2 #the target of the duel...
            character_event = { id = HFP.16003 } #player challenges you to a duel
        }
    }
}

character_event = { #Hero character's reaction, who then sends acceptance/refusal letter to player
    id = WR.405
    picture = GFX_evt_melee
    border = GFX_event_normal_frame_war
    is_triggered_only = yes
    trigger = {
    
    }

    immediate = {

    }

    desc = {
        text = EVTDESC_HF_10008_they_succeeded_greatly
        trigger = {
            FROM = {
                NOR = {
                    has_character_flag = was_mildly_injured
                    has_character_flag = was_actually_injured
                    has_character_flag = duel_fled
                }
            }
        }
    }
    desc = {
        text = EVTDESC_HF_10008_they_were_mildly_injured
        trigger = {
            FROM = { has_character_flag = was_mildly_injured }
        }
    }
    desc = {
        text = EVTDESC_HF_10008_they_were_seriously_injured
        trigger = {
            FROM = { has_character_flag = was_actually_injured }
        }
    }
    desc = {
        text = EVTDESCWR405_they_fled
        trigger = {
            FROM = { has_character_flag = duel_fled }
        }
    }

    option = {
        name = {
            text = EVTOPTA_HF_10008_impressed
            trigger = {
                FROM = {
                    NOR = {
                        has_character_flag = was_mildly_injured
                        has_character_flag = was_actually_injured
                        has_character_flag = duel_fled
                    }
                }
            }
        }
        name = {
            text = EVTOPTA_HF_10008_accepting
            trigger = {
                FROM = { has_character_flag = was_mildly_injured }
            }
        }
        name = {
            text = EVTOPTA_HF_10008_surprised
            trigger = {
                FROM = { has_character_flag = was_actually_injured }
            }
        }
        name = {
            text = EVTOPTA_HF_10008_unimpressed
            trigger = {
                FROM = { has_character_flag = duel_fled }
            }
        }
        if = {
            limit = {
                NOT = { FROM = { has_character_flag = duel_fled } }
            }
            custom_tooltip = { text = EVTOPTA_HF_10008_TT }
            add_legend_progress_trivial_effect = yes
            FROM = { letter_event = { id = WR.406 days = 5 } }
        }
        else = {
            custom_tooltip = { text = EVTOPTB_HF_10008_TT }
            FROM = { letter_event = { id = WR.407 days = 5 } }
        }
    }
}

letter_event = { #SUCCESS: Welcome to the society!
    id = WR.406
    picture = GFX_evt_melee
    border = GFX_event_letter_frame_war
    is_triggered_only = yes
    
    trigger = {
        NOT = { has_character_flag = show_once_flag }
    }

    immediate = {
        set_character_flag = show_once_flag
    }

    desc = {
        text = EVTDESC_HF_10009_succeeded_greatly
        trigger = {
            NOR = {
                has_character_flag = was_mildly_injured
                has_character_flag = was_actually_injured
                has_character_flag = duel_fled
            }
        }
    }
    desc = {
        text = EVTDESC_HF_10009_was_mildly_injured
        trigger = { has_character_flag = was_mildly_injured }
    }
    desc = {
        text = EVTDESCWR406_was_seriously_injured
        trigger = { has_character_flag = was_actually_injured }
    }

    option = {
        name = EVTOPTA_HF_10009
        
        join_society = event_target:warrior_lodge_to_join


        if = {
            limit = { has_character_flag = minor_reward }
            add_society_currency_minor_effect = yes
        }
        if = {
            limit = { has_character_flag = medium_reward }
            add_society_currency_medium_effect = yes
        }

        if = { # Give Sympathy trait if appropriate...
            limit = {
				OR = {
					society_member_of = warrior_lodge_norse 
					society_member_of = warrior_lodge_celtic
					society_member_of = warrior_lodge_occultist
					society_member_of = warrior_lodge_revelationist
					society_member_of = warrior_lodge_rust_cultist
				}
                NOT = { religion_group = pagan_group }
            }
            #Give Sympathy trait
            add_trait = sympathy_pagans
        }
		
		if = { # Give Sympathy trait if appropriate...
            limit = {
				OR = {
					society_member_of = warrior_lodge_peyotist
					society_member_of = warrior_lodge_raven_tales
				}
                NOT = { religion_group = american_native }
            }
            #Give Sympathy trait
            add_trait = sympathy_american_native
        }
		
		if = { # Give Sympathy trait if appropriate...
            limit = {
				OR = {
					society_member_of = warrior_lodge_atomicist
					society_member_of = warrior_lodge_americanist
				}
                NOT = { religion_group = oldworld }
            }
            #Give Sympathy trait
            add_trait = sympathy_oldworld
        }

        hidden_effect = {
            clr_character_flag = was_actually_injured
            clr_character_flag = was_mildly_injured
            clr_character_flag = awaiting_initiation_trial
            clr_character_flag = duel_fled
            clr_character_flag = minor_reward
            clr_character_flag = medium_reward
            clr_character_flag = show_once_flag
        }

        ### For characters who were recruited by their parents...
        if = {
            limit = {
                has_character_flag = is_being_recruited_to_warrior_lodge_by_parent
                event_target:recruiting_parent = { is_alive = yes }
            }
            custom_tooltip = { text = your_parent_will_be_proud_tt }
            tooltip = { #You are happy to have been recruited, and they are impressed you succeeded...
                opinion = {
                    modifier = opinion_grateful
                    who = event_target:recruiting_parent
                    years = 5
                }
                reverse_opinion = {
                    modifier = opinion_impressed
                    who = event_target:recruiting_parent
                    years = 5
                }
            }

            set_character_flag = passed_initiation
            event_target:recruiting_parent = { character_event = { id = WR.411 } }
        }
        ###
        clr_character_flag = society_join_block 
    } 
}

letter_event = { #FAILURE: You can't sit with us
    id = WR.407
    desc = EVTDESC_HF_10010
    picture = GFX_evt_melee
    border = GFX_event_letter_frame_war
    is_triggered_only = yes
    trigger = {
    
    }

    immediate = {

    }

    option = {
        name = EVTOPTA_HF_10010
        custom_tooltip = { text = EVTOPTB_HF_10019_TT } #You will be blocked from joining for 10 years
        #add blocking modifier (hidden)

        hidden_effect = {
            clr_character_flag = was_actually_injured
            clr_character_flag = was_mildly_injured
            clr_character_flag = awaiting_initiation_trial
            clr_character_flag = duel_fled
            clr_character_flag = minor_reward
            clr_character_flag = medium_reward
        }

        if = { #For characters who were recruited by their parents...
            limit = {
                has_character_flag = is_being_recruited_to_warrior_lodge_by_parent
                event_target:recruiting_parent = { is_alive = yes }
            }
            custom_tooltip = { text = notify_parent_recruiter_tt } #Your parent will be notified.
            set_character_flag = failed_initiation
            event_target:recruiting_parent = { character_event = { id = WR.411 } }
        }
        clr_character_flag = society_join_block
    }
}


character_event = {
    id = WR.408
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        #sends outcome of the initiation duel to leader, who instantly sends a response to the player: Join us!/Banned for 10 years!
        if = { #check if original hero is still around...
            limit = {
                event_target:hero_character = {
                    block_general_event_trigger = no
                }
            }
            event_target:hero_character = { character_event = { id = WR.405 } }
        }
        else = { #Otherwise, look elsewhere...
            if = { #Find a non-prisoner member to send the response...
                limit = { event_target:warrior_lodge_to_join = { leader = { prisoner = yes } } }
                event_target:warrior_lodge_to_join = {
                    random_society_member = {
                        limit = { 
                            society_member_of = event_target:warrior_lodge_to_join 
                            society_rank == 4
                            prisoner = no
                        }
                        save_event_target_as = hero_character
                        character_event = { id = WR.405 }
                        break = yes
                    }
                    random_society_member = {
                        limit = { 
                            society_member_of = event_target:warrior_lodge_to_join 
                            society_rank == 3
                            prisoner = no
                        }
                        save_event_target_as = hero_character
                        character_event = { id = WR.405 }
                        break = yes
                    }
                    random_society_member = {
                        limit = { 
                            society_member_of = event_target:warrior_lodge_to_join 
                            society_rank == 2
                            prisoner = no
                        }
                        save_event_target_as = hero_character
                        character_event = { id = WR.405 }
                        break = yes
                    }
                    random_society_member = {
                        limit = { 
                            society_member_of = event_target:warrior_lodge_to_join 
                            society_rank == 1
                            prisoner = no
                        }
                        save_event_target_as = hero_character
                        character_event = { id = WR.405 }
                        break = yes
                    }
                }
                #Everyone is somehow in prison so just use the leader anyway (there was no "break = yes")
            }
            event_target:warrior_lodge_to_join = { leader = { character_event = { id = WR.405 } } }
            event_target:hero_character = { character_event = { id = WR.405 } }
        }
    }
}

#Recruiting your child
character_event = { #Fires for the adult child (from decision)
    id = WR.413
    desc = EVTDESCWR413
    picture = GFX_evt_melee
    border = GFX_event_normal_frame_war
    is_triggered_only = yes
    
    trigger = {

    }

    immediate = {
        #Find a non-prisoner member
        any_society_member = {
            limit = { 
                society_member_of = event_target:warrior_lodge_to_join
                prisoner = no
            }
            score_value = { #Prioritizes selecting some kind of warrior...
                value = 10
                warrior_hero_score = yes
            }
            save_event_target_as = hero_character
        }
        if = { #If it failed to save anyone...
            limit = { event_target:hero_character = { always = no } }
            #Means everyone is somehow in prison so just use the leader anyway...?
            event_target:warrior_lodge_to_join = { leader = { save_event_target_as = hero_character } }
        }
    }

    option = {      
        name = EVTOPTA_HF_10016 #YES - It's what I always wanted
        custom_tooltip = { text = EVTOPTA_HF_10016_TT }

        event_target:hero_character = {
            character_event = { id = WR.401 } #Send regular "I wanna join"-event to high-ranking member
        }
        set_character_flag = accepted_trial

        ai_chance = {
            factor = 100
            #warrior_recruit_score = yes
            modifier = {
                factor = 0
                is_in_society = yes
            }
        }
        trigger = { # Kids only say yes if they not already a secret member of some kind...
            is_secret_religious_society_member_trigger = no
            is_devil_worshiper_trigger = no
            NOT = { society_member_of = the_assassins }
        }
    }
    option = {      
        name = EVTOPTB_HF_10016 #NO - I will carve my own path
        custom_tooltip = { text = EVTOPTB_HF_10016_TT }
        set_character_flag = refused_trial

        clr_character_flag = society_join_block
        clr_character_flag = awaiting_initiation_trial
    
        hidden_effect = { character_event = { id = WR.412 days = 365 } }

        ai_chance = {
            factor = 10
            modifier = {
                factor = 1.5
                trait = stubborn
            }
        }
        trigger = { #Only show this option if parent does *not* have a mission to recruit you (or if you have somehow had time to join a secret society *before* they tried recruiting you)...
            OR = {
                NOT = {
                    event_target:recruiting_parent = {
                        has_quest = quest_warrior_lodge_recruit
                        quest_target = { character = ROOT }
                    }
                }
                is_secret_religious_society_member_trigger = yes
                is_devil_worshiper_trigger = yes
                society_member_of = the_assassins
            }
        }
    }

    after = { #Answer is relayed to parent...
        event_target:recruiting_parent = {
            character_event = { id = WR.409 days = 1 }
        }
    }
}

character_event = {
    id = WR.412
    hide_window = yes
    is_triggered_only = yes
    immediate = {
        clr_character_flag = is_being_recruited_to_warrior_lodge_by_parent
        clr_character_flag = refused_trial
    }
}

character_event = {
    id = WR.409
    picture = GFX_evt_melee
    border = GFX_event_normal_frame_war
    is_triggered_only = yes
    
    desc = {
        text = EVTDESC_HF_10012_A
        trigger = {
            FROM = { has_character_flag = accepted_trial }
            NOT = { event_target:hero_character = { character = ROOT } }
        }
    }
    desc = {
        text = EVTDESC_HF_10012_A_hero_is_parent
        trigger = {
            FROM = { has_character_flag = accepted_trial }
            event_target:hero_character = { character = ROOT }
        }
    }
    desc = {
        text = EVTDESC_HF_10012_B
        trigger = {
            FROM = { has_character_flag = refused_trial }
            NOT = { event_target:hero_character = { character = ROOT } }
        }
    }
    desc = {
        text = EVTDESC_HF_10012_B_hero_is_parent
        trigger = {
            FROM = { has_character_flag = refused_trial }
            event_target:hero_character = { character = ROOT }
        }
    }

    option = { 

        name = {
            text = EVTOPTA_HF_10012_1 #I was just waiting for you to be ready!
            trigger = { event_target:hero_character = { NOT = { character = ROOT } } }
        }
        name = {
            text = EVTOPTA_HF_10012_2 #We'll do this the right way. 
            trigger = { event_target:hero_character = { character = ROOT } }
        }
        if = {
            limit = { event_target:hero_character = { NOT = { character = ROOT } } }
            custom_tooltip = { text = EVTOPTA_HF_10012_TT }
            show_portrait = event_target:hero_character
        }

        trigger = { FROM = { has_character_flag = accepted_trial } }
    }
    option = {      
        name = EVTOPTB_HF_10012 #Why, you ungrateful little...
        custom_tooltip = { text = EVTOPTB_HF_10012_TT }
        if = {
            limit = { event_target:hero_character = { NOT = { character = ROOT } } }
            show_portrait = event_target:hero_character
        }
        trigger = { FROM = { has_character_flag = refused_trial } }
    }

    after = {
        FROM = {
            clr_character_flag = accepted_trial
            clr_character_flag = refused_trial
        }
    }
}

character_event = {
    id = WR.410
    picture = GFX_evt_camaraderie
    desc = EVTDESCWR410_A #"I am one of you guys now!"
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    trigger = {
        NOT = { has_character_flag = show_only_once@FROM }
    }

    immediate = {
        set_character_flag = show_only_once@FROM
    }
    
    option = { 
        name = EVTOPTA_HF_10013 #I knew you had it in you.
        custom_tooltip = { text = EVTOPTA_HF_10013_TT }
        prestige = 20
        reverse_opinion = {
            modifier = opinion_grateful
            who = FROM
            years = 5
        }
        opinion = {
            modifier = opinion_impressed
            who = FROM
            years = 5
        }
        if = {
            limit = {
                has_quest = quest_warrior_lodge_recruit
                quest_target = { character = FROM }
            }
            clr_quest = quest_warrior_lodge_recruit
            add_society_currency_medium_effect = yes
        }
        add_legend_progress_trivial_effect = yes
        trigger = { same_society_as = FROM }
    }

    ### Only if left society: ###
    option = {
        name = EVTOPTB_HF_10013 #You make me regret my decision to leave...
        custom_tooltip = { text = EVTOPTB_HF_10013_TT }
        if = {
            limit = { NOT = { trait = depressed } }
            random = {
                chance = 10
                add_trait_depressed_effect = yes
            }
        }
        trigger = { NOT = { same_society_as = FROM } }
    }
    option = {
        name = EVTOPTC_HF_10013 #I'm not impressed.
        custom_tooltip = { text = EVTOPTC_HF_10013_TT }

        if = {
            limit = {
                NOT = { trait = kind }
                NOT = { trait = cruel }
            }
            add_trait = cruel
        }
        else_if = {
            limit = {
                trait = kind
            }
            remove_trait = kind
        }
        reverse_opinion = {
            modifier = opinion_disappointed
            who = FROM
            years = 5
        }

        trigger = { NOT = { same_society_as = FROM } }
    }

    after = {
        FROM = {
            clr_character_flag = passed_initiation
            clr_character_flag = is_being_recruited_to_warrior_lodge_by_parent
            hidden_tooltip = { character_event = { id = HF.25400 } } #Flavor Tombola for underage recruits.
        }
        clr_character_flag = show_only_once@FROM
    }
}

character_event = {
    id = WR.411
    picture = GFX_evt_teaching_moment
    border = GFX_event_normal_frame_war
    is_triggered_only = yes

    trigger = {
        NOT = { has_character_flag = show_only_once@FROM }
    }

    immediate = {
        set_character_flag = show_only_once@FROM
    }

    desc = {
        text = EVTDESC_HF_10013_A
        trigger = {
            FROM = { NOT = { has_character_flag = chickened_out } }
        }
    }
    desc = {
        text = EVTDESC_HF_10014_B
        trigger = {
            FROM = { has_character_flag = chickened_out }
        }
    }
    

    option = { 
        name = EVTOPTA_HF_10014 #I'm still proud to call you family.
        custom_tooltip = { text = EVTOPTA_HF_10014_TT }

        if = {
            limit = {
                NOT = { trait = kind }
                NOT = { trait = cruel }
            }
            add_trait = kind
        }
        else_if = {
            limit = {
                trait = cruel
            }
            remove_trait = cruel
        }
        FROM = { set_character_flag = parent_was_supportive }
    }
    option = {      
        name = EVTOPTB_HF_10014 #I expected more, honestly...
        custom_tooltip = { text = EVTOPTB_HF_10014_TT }

        prestige = 20

        if = {
            limit = {
                NOT = { trait = kind }
                NOT = { trait = cruel }
            }
            add_trait = cruel
        }
        else_if = {
            limit = {
                trait = kind
            }
            remove_trait = kind
        }
        else_if = {
            limit = {
                NOT = { trait = honest }
            }
            add_trait = honest
        }
        FROM = { set_character_flag = parent_was_mean }
    }

    after = {
        if = {
            limit = {
                has_quest = quest_warrior_lodge_recruit
                quest_target = { character = FROM }
            }
            clr_quest = { id = quest_warrior_lodge_recruit failure = yes }
        }
        FROM = {
            clr_character_flag = failed_initiation
            clr_character_flag = chickened_out
            clr_character_flag = is_being_recruited_to_warrior_lodge_by_parent
            character_event = { id = WR.414 days = 5 }
        }
        clr_character_flag = show_only_once@FROM
    }
}

character_event = {
    id = WR.414
    picture = GFX_evt_camaraderie
    border = GFX_event_normal_frame_war
    is_triggered_only = yes
    
    trigger = {
        FROM = { is_alive = yes }
    }

    desc = {
        text = EVTDESC_HF_10017_A #They took it well.
        trigger = { has_character_flag = parent_was_supportive }
    }
    desc = {
        text = EVTDESC_HF_10017_B #They took it poorly.
        trigger = { has_character_flag = parent_was_mean }
    }

    ############### Good reaction #########
    option = {      
        name = EVTOPTA_HF_10017_1 #Family is most important, after all.
        if = {
            limit = { has_dlc = "Way of Life" }
            set_focus = focus_family
        }
        opinion = {
            modifier = comforted_opinion
            who = FROM
            years = 5
        }
        trigger = { has_character_flag = parent_was_supportive }
    }
    option = {      
        name = EVTOPTA_HF_10017_2 #I'm lucky to have him/her.
        
        opinion = {
            modifier = comforted_opinion
            who = FROM
            years = 5
        }

        trigger = { has_character_flag = parent_was_supportive }
    }
    ############### Poor reaction #########
    option = {      
        name = EVTOPTB_HF_10017_2 #This is not the end of my story!

        if = {
            limit = { NOT = { trait = stressed } }
            add_trait = stressed
        }
        if = {
            limit = { NOT = { trait = ambitious } }
            add_trait = ambitious
        }

        custom_tooltip = { text = EVTOPTBWR414_TT }
        trigger = { has_character_flag = parent_was_mean }
    }
    option = {      
        name = EVTOPTB_HF_10017_1 #I am an embarrassment.
        trigger = { has_character_flag = parent_was_mean }
    }
}
