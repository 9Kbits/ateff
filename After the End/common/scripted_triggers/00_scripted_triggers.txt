#	Example:
# 
#	example_trigger = {
#		year = 1066
#		num_of_spouses = 2
#	}
#
#
#	In a script file:
#
#	trigger = {
#		example_trigger = yes
#	}
#
# Naming convention:  xxxx_trigger
#

example_trigger = {
	year = 1066
	num_of_spouses = 2
}

#Used with character interaction to replace merc leader. DO NOT REMOVE
can_be_mercenary_leader_potential_trigger = {
	prisoner = no
	is_ruler = no
	
	NOR = { 
		trait = incapable
		trait = in_hiding
		trait = monk
	}
	same_realm = FROM
	OR = {
		is_female = no
		AND = {
			religion = gaian
			FROM = { religion = gaian }
		}
		AND = {
			religion = ursuline
			FROM = { religion = ursuline }
		}
		FROM = { has_law = true_cognatic_succession }
		FROM = { has_law = enatic_cognatic_succession }
		FROM = { has_law = enatic_succession }
	}
}
#Used with character interaction to replace merc leader. DO NOT REMOVE
can_be_mercenary_leader_allow_trigger = {
	is_adult = yes
	liege = { character = FROM }
	custom_tooltip = {
		text = mercenary_martial_education_tooltip
		hidden_tooltip = {
			OR = {
				trait = misguided_warrior
				trait = tough_soldier
				trait = skilled_tactician
				trait = brilliant_strategist
			}
		}
	}
}

#Used with character interaction to replace merc leader. DO NOT REMOVE
replace_mercenary_captain_potential_trigger = {
	mercenary = yes
	primary_title = {
		has_title_flag = ze_dyn_merc
		band_creator = {
			character = FROM
		}
	}
}

#Used with character interaction to replace merc leader. DO NOT REMOVE
replace_mercenary_captain_allow_trigger = {
	primary_title = {
		NOT = { has_raised_standing_troops = yes }
		band_creator = {
			character = FROM
		}
	}
}

#Used with character interaction to swap council job. DO NOT REMOVE
change_council_job_potential_trigger = {
	liege = { character = FROM }
	NOT = {
		AND = {
			has_job_title = job_spiritual
			liege = { religion_group = muslim }
			religion = FROM
		}
	}
	OR = {
		AND = {
			OR = {
				has_minor_title = title_councilmember_king
				has_minor_title = title_councilmember_emperor
			}
			OR = {
				can_be_chancellor_trigger = yes
				can_be_marshal_trigger = yes
				can_be_treasurer_trigger = yes
				can_be_spymaster_trigger = yes
				AND = {
					can_be_spiritual_trigger = yes
					ROOT = { NOT = { religion_group = muslim } }
				}
			}
		}
		AND = {
			OR = {
				has_job_title = job_chancellor
				has_job_title = job_marshal
				has_job_title = job_treasurer
				has_job_title = job_spymaster
				has_job_title = job_spiritual
			}
			liege = {
				OR = {
					job_chancellor = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_marshal = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_treasurer = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_spymaster = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_spiritual = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
				}
			}
		}
	}
}

can_be_chancellor_trigger = {
	OR = {
		AND = {
			OR = {
				is_female = no
				trait = horse # So we can have female glitterhoofs! :D
				AND = {
					religion = gaian
					FROM = { religion = gaian }
				}
				AND = {
					religion = ursuline
					FROM = { religion = ursuline }
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
							}
						}
						is_landed = yes
						trait = nun
						
					}
				}
				liege = {
	primary_title = {
		has_law = status_of_women_4
	}
}
			}
			is_adult = yes
		}
		has_character_flag = special_chancellor
	}
	
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
}

can_be_marshal_trigger = {
	OR = {
		AND = {
			OR = {
				is_female = no
				trait = horse # So we can have female glitterhoofs! :D
				AND = {
					religion = gaian
					FROM = { religion = gaian }
				}
				AND = {
					religion = ursuline
					FROM = { religion = ursuline }
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
							}
						}
						is_landed = yes
						
					}
				}
				liege = {
	primary_title = {
		has_law = status_of_women_4
	}
}
			}
			OR = {
				NOT = { religion = hindu }
				trait = kshatriya
			}
			is_adult = yes
		}
		has_character_flag = special_marshal
	}
	
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_flag = guru }
}

can_be_treasurer_trigger = {
	OR = {
		AND = {
			OR = {
				is_female = no
				trait = horse # So we can have female glitterhoofs! :D
				AND = {
					religion = gaian
					FROM = { religion = gaian }
				}
				AND = {
					religion = ursuline
					FROM = { religion = ursuline }
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
							}
						}
						is_landed = yes
						trait = nun
						
					}
				}
				liege = {
	primary_title = {
		has_law = status_of_women_4
	}
}
			}
			is_adult = yes
		}
		has_character_flag = special_treasurer
	}
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_flag = guru }
}

can_be_spymaster_trigger = {
	OR = {
		AND = {
			OR = {
				is_female = no
				trait = horse # So we can have female glitterhoofs! :D
				liege = { 
					OR = {
						mother = { character = ROOT }
						any_spouse = { character = ROOT }
					}
				}
				AND = {
					religion_group = pagan_group
					liege = {
						religion_group = pagan_group
					}
				}
				AND = {
					religion = gaian
					FROM = { religion = gaian }
				}
				AND = {
					religion = ursuline
					FROM = { religion = ursuline }
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_1
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
							}
						}
						is_landed = yes
						trait = nun
						
					}
				}
				liege = {
	primary_title = {
		has_law = status_of_women_4
	}
}
			}
			is_adult = yes
		}
		has_character_flag = special_spymaster
	}
	
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { has_character_flag = guru }
}

can_be_spiritual_trigger = {
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	liege = {
		religion = ROOT
	}
	OR = {
		AND = {
			is_adult = yes
			OR = {
				is_female = no
				religion_allows_female_temple_holders = yes
			}
		}
		has_character_flag = special_spiritual
	}
	
	OR = {
		is_theocracy = yes
		AND = {
			liege = { is_tribal = yes }
			is_ruler = no
		}
		liege = { religion_group = oldworld }
		AND = {
			clan = yes
			liege = {
				is_nomadic = yes
			}
		}
		AND = {
			has_autocephaly = no
			is_ruler = no
		}
		AND = {
			has_autocephaly = yes
			is_ruler = no
			NOT = {
				any_vassal = { is_theocracy = yes }
			}
		}
	}
	
	OR = {
		NOT = { religion_group = oldworld }
		NOT = { liege = { religion_group = oldworld } }
		trait = detached_priest
		trait = martial_cleric
		trait = scholarly_theologian
		trait = mastermind_theologian
	}
}

can_be_councilmember_king_trigger = {
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	AND = {
		OR = {
			is_female = no
			AND = {
				OR = {
					religion = gaian
					religion = ursuline
				}
				liege = { religion = ROOT }
			}
			AND = {
				liege = {
					primary_title = {
						OR = {
							has_law = status_of_women_1
							has_law = status_of_women_2
							has_law = status_of_women_3
						}
					}
				}
				is_landed = yes
			}
			liege = { primary_title = { has_law = status_of_women_4 } }
		}
		is_adult = yes
	}
}

can_be_councilmember_emperor_trigger = {
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	OR = {
		AND = {
			OR = {
				is_female = no
				AND = {
					religion = gaian
					liege = { religion = gaian }
				}
				AND = {
					religion = ursuline
					liege = { religion = ursuline }
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_1
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					is_landed = yes
				}
				liege = { primary_title = { has_law = status_of_women_4 } }
			}
			is_adult = yes
		}
	}
}

is_strong_trigger = {
		OR = {
			trait = strong
			trait = robust
		}
}

is_weak_trigger = {
		OR = {
			trait = weak
			trait = feeble
		}
}

is_smart_trigger = {
		OR = {
			trait = genius
			trait = quick
			trait = shrewd
		}
}

is_dumb_trigger = {
		OR = {
			trait = dull
			trait = slow
			trait = imbecile 
		}
}


###REAPER'S DUE####

can_be_maimed_trigger = {
	OR = {
		AND = {
			NOT = { has_dlc = "Reapers" }
			NOT = { trait = maimed }
		}
		AND = {
			has_dlc = "Reapers"
			NOT = {
				trait = one_eyed
				trait = one_handed 
				trait = one_legged 
				trait = disfigured 
				trait = mangled
			}
		}
	}
}

physician_bad_trigger = { #todo mental, blinded
	OR = {
		trait = lunatic
		trait = stressed
		trait = depressed
		trait = possessed
		trait = drunkard
		trait = blinded
	}
}

physician_good_trigger = { #todo is learned
	OR = {
		trait = scholar 
		trait = mutazilite
		trait = erudite 
		trait = physician
		religion_group = jewish_group
	} 
}

is_inaccessible_trigger = {
	custom_tooltip = {
		text = is_inaccessible_tooltip
		hidden_tooltip = {
			OR = {
				trait = in_hiding
				has_character_modifier = in_seclusion
			}
		}
	}
}

prefers_men_trigger = {
	OR = {
		AND = {
			is_female = yes
			NOT = { trait = homosexual }
		}
		AND = {
			is_female = no
			trait = homosexual
		}
	}
}

root_attraction_trigger = {
	#Returns yes when root is attracted the scoped character, based on sex
	OR = {
		AND = {
			is_female = yes
			ROOT = { prefers_men_trigger = no }
		}
		AND = {
			is_female = no
			ROOT = { prefers_men_trigger = yes }
		}
	}
}

is_unimportant_trigger = {
	NOR = {
		is_married = yes
		is_landed = yes
		has_job_title = yes
		has_minor_title = yes
		AND = {
			NOT = { dynasty = none }
			num_of_dynasty_members = 2
		}
		any_lover = { ai = no }
		any_close_relative = { ai = no }
		any_friend = { ai = no }
		any_rival = { ai = no }
		any_consort = { ai = no }
		num_of_claims = 1
		has_character_flag = eternal_life_mystic
		trait = horse
		has_character_modifier = in_seclusion
		immortal = yes
	}
}

sad_example_trigger = {
	age = 30
	is_married = no
	NOT = { num_of_children = 1 }
}

has_epidemic_disease_trigger = {
	OR = {
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = has_aztec_disease
	}
}

developing_epidemic_disease_trigger = {
	OR = {
		has_character_flag = got_tuberculosis
		has_character_flag = got_typhoid_fever
		has_character_flag = got_typhus
		has_character_flag = got_bubonic_plague
		has_character_flag = got_measles
		has_character_flag = got_small_pox
		has_character_flag = got_aztec_disease
	}
}

can_be_prophet_of_doom_trigger = {
	is_adult = yes
	is_married = no
	trait = zealous
	is_landed = no
	
	OR = {
		trait = ambitious
		trait = misguided_warrior
		trait = elusive_shadow
		trait = lunatic
		trait = possessed
		trait = paranoid
		trait = stubborn
	}
	NOR = {
		trait = content
		trait = cynical
		trait = temperate
		is_main_spouse = yes
		is_landed = yes
		is_close_relative = ROOT
	}
	ai = yes
}

death_murder_trigger = {
	OR = {
		death_murder_unknown_trigger = yes
		death_murder_known_trigger = yes
	}
	
}

death_murder_unknown_trigger = {
	OR = {
		death_reason = death_murder_unknown
		death_reason = death_murder_unknown_poison
		death_reason = death_murder_unknown_fall
		death_reason = death_murder_unknown_arrow
		death_reason = death_murder_unknown_beheading
		death_reason = death_murder_unknown_snakes
		death_reason = death_murder_unknown_strangle

	}	
}

death_murder_known_trigger = {
	OR = {
		death_reason = death_murder
		death_reason = death_murder_poison
		death_reason = death_murder_fall
		death_reason = death_murder_drowning
		death_reason = death_murder_butchered
		death_reason = death_murder_arrow
		death_reason = death_murder_beheading
		death_reason = death_murder_snakes
		death_reason = death_murder_strangle
	}	
}

death_execution_trigger = {
	OR = {
		death_reason = death_execution
		death_reason = death_execution_crushing
		death_reason = death_execution_ash
		death_reason = death_execution_burning
		death_reason = death_execution_hdq
		death_reason = death_execution_bear
		death_reason = death_execution_lion
		death_reason = death_execution_snake_pit
		death_reason = death_execution_disembowelment
		death_reason = death_execution_boiling
		death_reason = death_execution_sawing
		death_reason = death_execution_hunt
		death_reason = death_execution_live_burial
		death_reason = death_execution_hanging
		death_reason = death_execution_immurement
		death_reason = death_execution_beheading
		death_reason = death_execution_wine
		death_reason = death_execution_poison
		death_reason = death_execution_flaying
		death_reason = death_execution_impaling
		death_reason = death_execution_tiger
		death_reason = death_execution_elephants
		death_reason = death_execution_bamboo
		death_reason = death_execution_stoning
		death_reason = death_execution_crucifixion
		death_reason = death_execution_blood_eagle
		death_reason = death_execution_scaphism
		death_reason = death_execution_drowning_pit
		death_reason = death_execution_garrotting
		death_reason = death_execution_horses
		death_reason = death_execution_back_breaking
		death_reason = death_execution_wheel
		death_reason = death_execution_boar
		death_reason = death_execution_eaten
		death_reason = death_execution_aztec_sacrifice
	}	
}

death_sacrificed_trigger = {
	OR = {
		death_reason = death_sacrificed
		death_reason = death_sacrificed_norse
		death_reason = death_sacrificed_ancestors
	}	
}

death_accident_trigger = {
	OR = {
		death_reason = death_accident
		death_reason = death_accident_bear
		death_reason = death_accident_boar
		death_reason = death_accident_drowning
		death_reason = death_accident_arrow
		death_reason = death_accident_tiger
		death_reason = death_accident_snakes
		death_reason = death_accident_fall
	}
}

death_suicide_trigger = {
	OR = {
		death_reason = death_suicide
		death_reason = death_suicide_fall
		death_reason = death_suicide_hanging
		death_reason = death_suicide_poison
	}
}

block_general_event_trigger = {
	OR = {	
		trait = incapable
		is_adult = no
		prisoner = yes
		is_inaccessible_trigger = yes
		is_alive = no
		NOT = { always = yes }
	}
}
